{"status":0,"data":{"tree":{},"others":[{"_id":"kk_3_1956_8079","key":{"1001":"000400600541","1518":"bytes[6]=((~((((bytes[1]&0xF0)>>4)+(bytes[1]&0x0F) + ((bytes[2]&0xF0)>>4)+(bytes[2]&0x0F))&0x0F))<<4)+1;","1011":"030C1001030C1002030C1003030C1004030C1005030C1006030C1007030C1008030C1009030C100A030C100B030C100C030C100D030C100E030C100F","1013":"090A0C00303807384008090A0C0330380038400F090A0C0230380138400E090A0C0130380238400D","1002":"086841000000C10708","1502":"NA","300":"9200,4500","307":"1","1503":"NA","1511":"bytes[5]=(byte) (((~((((bytes[0]&0xF0)>>4)+(bytes[0]&0x0F) + ((bytes[1]&0xF0)>>4)+(bytes[1]&0x0F))&0x0F))<<4)+1);","1522":"bytes[6]=bit32.lshift(bit32.bnot(bit32.band((bit32.rshift(bit32.band(bytes[1],0xF0),4)+bit32.band(bytes[1],0x0F) + bit32.rshift(bit32.band(bytes[2],0xF0),4)+bit32.band(bytes[2],0x0F)),0x0F)),4)+1;","301":"600,510","1504":"T","305":"547","888888":[],"1012":"03080A0100000308100903080A02","303":"-1&480,1000","302":"540,1600"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":1,"device":3},{"_id":"1956_2807","key":{"1001":"00020520","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=(bytes[9]&0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=(bytes[9]|0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=(bytes[9]|0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","1011":"033C400F","1013":"03454800034548020345480303454805","1002":"0E23CB26010024030F380000000083","300":"3660,1800","1015":"03424507034245000342450103424502034245030342450403424505","1008":"0401000D0D","1515":"22|0-1|0|CHAFD@9|10-1440,10|1|CHAFD@10|10-1440,10|0|CHAFD","1503":"T","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=bit32.band(bytes[9],0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","301":"400,400","1504":"T|S&0","306":"1","305":"137","1517":"22@5&1-3*0|5@22&1-1*0|","1506":"0,1,2,3,4,5,6","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22}],"1012":"0334380303343801063438083C3E07063438073C3E07063438023C3E07","1505":"T","302":"400,1400"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":900,"device":3},{"_id":"kk_3_1956_3232","key":{"1001":"000406E70718","1518":"if((functionId==1)and(power==1)) then\nbytes[7]=(bytes[7]|0x02);\nbytes[8]=(bytes[8]&0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=(~bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=(~bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=(bytes[7]&0xFD);\nbytes[8]=(~bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=(bytes[7]&0x9D);\nbytes[8]=(~bytes[7]);\nend\nend\nend","1011":"0644480F4C50000644480E4C50010644480D4C50020644480C4C50030644480B4C50040644480A4C5005064448094C5006064448084C5007064448074C5008064448064C5009064448054C500A064448044C500B064448034C500C064448024C500D064448014C500E","1013":"06303307383B0006303304383B0306303305383B0206303306383B01","1016":"070124280F2C3000070224280E2C3001070324280D2C3002070424280C2C3003070524280A2C3005070624280B2C3004070724280B2C300407092428092C300607102428092C300607152428082C300707162428062C300907082428052C300A070B2428042C300B071B2428002C300F07092428092C3006070A2428092C300607162428062C300907082428052C300A070B2428042C300B071B2428002C300F","1002":"0CFF00FF00FF00F50AD6292AD5","300":"6000,7400","1015":"063436023C3E01063436013C3E02063436033C3E00","1515":"22|0-1|0|CHAFD@21|1-2|0|CHAFD@11|0-1|2|CHAFD@27|0-1|1|C@8|0-1|0|CH@9|0-1440,60|1|CHAFD@10|0-1440,60|0|CHAFD","1503":"T","1522":"if((functionId==1)and(power==1)) then\nbytes[7]=bit32.bor(bytes[7],0x02);\nbytes[8]=bit32.band(bytes[8],0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=bit32.band(bytes[7],0xFD);\nbytes[8]=bit32.bnot(bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=bit32.band(bytes[7],0x9D);\nbytes[8]=bit32.bnot(bytes[7]);\nend\nend\nend","301":"560,560","306":"1","305":"412","1506":"0,1,2","1017":"0815013334013B3C00@0815023334003B3C01@0816003738013F4000@0816013738003F4001@0808001415011C1D00@0808011415001C1D01@080B001718011F2000@080B011718001F2001@081B00101101181900@081B01101100181901","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27}],"1012":"0640440D484C0206404407484C080640440F484C0006404409484C060640440B484C04","303":"-1&7400,560","1505":"T|S&0,2,3","302":"560,1680"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":901,"device":3},{"_id":"kk_3_1956_10727","key":{"1001":"000400400940","1518":"if(exts~=nil) then\nif (power==0) then\nlf=exts[21]; \nif (lf ==1) then\nbytes[6]=(bytes[6]&0x0F )+ 0x10 ;\nif (functionId==21) then \nbytes[1]=(bytes[1]&0xBF) + 0x40 ;\nbytes[10]=(bytes[10]&0xBF) + 0x40 ;\nend\nelseif (lf ==2) then\nbytes[6]=(bytes[6]&0x0F);\nif (functionId==21) then \nbytes[1]=(bytes[1]&0xBF);\nbytes[10]=(bytes[10]&0xBF);\nend\nend\nbytes[9]= 0xC0+(((bytes[1]&0x0F)+ (bytes[2]&0x0F) + ( bytes[3]&0x0F) +( bytes[4]&0x0F) +  ((bytes[6]&0xF0)>>4) )<<4) ;\nss=exts[18]; \nif (ss ==1) then\nbytes[9]= bytes[9]+0x04;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes1={};\nif (timing_on<600)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0x80;\nelse \nbytes[2]=bytes[2]+0x90;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60));\nelseif (timing_on>600 and timing_on<1200)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0xA0;\nelse \nbytes[2]=bytes[2]+0xB0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60))-10;\nelseif (timing_on>1200 and timing_on<=1440)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0xC0;\nelse \nbytes[2]=bytes[2]+0xD0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60))-20;\nend\nbytes1[1]=bytes[1];\nbytes1[2]=bytes[2];\nbytes1[3]=bytes[3];\nbytes1[4]=bytes[4];\nbytes1[5]=bytes[5];\nbytes1[6]=bytes[6];\nbytes1[7]=bytes[7];\nbytes1[8]=bytes[8];\nbytes1[9]= 0xC0+(((bytes1[1]&0x0F)+ (bytes1[2]&0x0F) + ( bytes1[3]&0x0F) +( bytes1[4]&0x0F) +  ((bytes1[6]&0xF0)>>4) )<<4) ;\nbytes1[10]=bytes[1];\nbytes1[11]=bytes[2];\nbytes1[12]=bytes[3];\nbytes1[13]=bytes[4]+0x10;;\nbytes1[14]=bytes[5];\nbytes1[15]=(timing_on&0xFF);\nbytes1[16]=((timing_on&0xF00)>>8);\nbytes1[17]=0;\nbytes1[18]= (bytes1[10]&0x0F) + ( bytes1[11]&0x0F) +   (bytes1[12]&0x0F) +   (bytes1[13]&0x0F) +  ((bytes1[15]&0xF0)>>4);\nbytes1[18]=((0x0A+(bytes1[18]&0x0F))<<4)+0x02;\nbytes1[19]=bytes[1];\nbytes1[20]=bytes[2];\nbytes1[21]=bytes[3];\nbytes1[22]=bytes[4]+0x20;\nbytes1[23]=bytes[5];\nbytes1[24]=bytes[15];\nbytes1[25]=bytes[16];\nbytes1[26]=bytes[17];\nbytes1[27]= (bytes1[19]&0x0F) + ( bytes1[20]&0x0F) +   (bytes1[21]&0x0F) +   (bytes1[22]&0x0F) +  ((bytes1[24]&0xF0)>>4)+((bytes1[26]&0xF0)>>4);\nbytes1[27]=((0x0A+(bytes1[27]&0x0F))<<4);\nbytes=bytes1;\nreturn;\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes1={};\nif (timing_off<600)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0x80;\nelse \nbytes[2]=bytes[2]+0x90;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60));\nelseif (timing_off>600 and timing_off<1200)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0xA0;\nelse \nbytes[2]=bytes[2]+0xB0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60))-10;\nelseif (timing_off>1200 and timing_off<=1440)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0xC0;\nelse \nbytes[2]=bytes[2]+0xD0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60))-20;\nend\nbytes1[1]=bytes[1];\nbytes1[2]=bytes[2];\nbytes1[3]=bytes[3];\nbytes1[4]=bytes[4];\nbytes1[5]=bytes[5];\nbytes1[6]=bytes[6];\nbytes1[7]=bytes[7];\nbytes1[8]=bytes[8];\nbytes1[9]= 0xC0+(((bytes1[1]&0x0F)+ (bytes1[2]&0x0F) + ( bytes1[3]&0x0F) +( bytes1[4]&0x0F) +  ((bytes1[6]&0xF0)>>4) )<<4) ;\nbytes1[10]=bytes[1];\nbytes1[11]=bytes[2];\nbytes1[12]=bytes[3];\nbytes1[13]=bytes[4]+0x10;;\nbytes1[14]=bytes[5];\nbytes1[15]=0;\nbytes1[16]=((timing_off&0x0F)<<4);\nbytes1[17]=((timing_off&0xFF0)>>4);\nbytes1[18]= (bytes1[10]&0x0F) + ( bytes1[11]&0x0F) +   (bytes1[12]&0x0F) +   (bytes1[13]&0x0F) +  ((bytes1[16]&0xF0)>>4)+  ((bytes1[17]&0xF0)>>4);\nbytes1[18]=((0x0A+(bytes1[18]&0x0F))<<4)+0x01;\nbytes1[19]=bytes[1];\nbytes1[20]=bytes[2];\nbytes1[21]=bytes[3];\nbytes1[22]=bytes[4]+0x20;\nbytes1[23]=bytes[5];\nbytes1[24]=bytes[15];\nbytes1[25]=bytes[16];\nbytes1[26]=bytes[17];\nbytes1[27]= (bytes1[19]&0x0F) + ( bytes1[20]&0x0F) +   (bytes1[21]&0x0F) +   (bytes1[22]&0x0F) +  ((bytes1[24]&0xF0)>>4)+((bytes1[26]&0xF0)>>4);\nbytes1[27]=((0x0A+(bytes1[27]&0x0F))<<4);\nbytes=bytes1;\nreturn;\nend\nend\nend\nif (functionId==6) then\nbytes[1]=(bytes[1]|0x40);\nbytes[10]=(bytes[10]|0x40);\nelse if (functionId==7) then\nbytes[1]=(bytes[1]&0xBF);\nbytes[10]=(bytes[10]&0xBF);\nend\nend\nbytes[18]=(bytes[18]&0x0F)+(( 0x0A+(bytes[10]&0x0F) + ( bytes[11]&0x0F) +   (bytes[12]&0x0F) +   (bytes[13]&0x0F) +  ((bytes[15]&0xF0)>>4) +   ((bytes[17]&0xF0)>>4))<<4) ;","1013":"090204004A4C00808400090204014A4C01808401090204034A4C03808403090204034A4C03808405","1002":"12490020500211200050490020700200000030","300":"9000,4500","1015":"090102012C3001494A01090102002C3000494A00","1008":"0805100C010305070A","1515":"8|0-1|0|CH@9|0-1440,30|1|CHAFD@10|0-1440,30|0|CHAFD@11|1,0-1|2|CHAFD@12|1,0-1|0|H@13|0-1|0|CHAFD@14|0-1|2|CHAFD@15|0-1|0|CD@16|0-3|0|CHAFD@18|0-1|0|C@21|1-2|0|CHAFD@22|0-2|0|CHD@106|0-2|0|CHAFD","1503":"T","1511":"bytes[17]= (byte)( (bytes[9]&0x0F) +  ( bytes[10]&0x0F) +  (bytes[11]&0x0F) +  (bytes[12]&0x0F) +  ((bytes[14]&0xF0)>>>4) +  ((bytes[16]&0xF0)>>>4)); \t  bytes[17]=(byte)(((byte)0x0A+(byte)(bytes[17]&0x0F))<<4);","1003":"0401010A01","1522":"if(exts~=nil) then\nif (power==0) then\nlf=exts[21]; \nif (lf ==1) then\nbytes[6]=bit32.band(bytes[6],0x0F )+ 0x10 ;\nif (functionId==21) then \nbytes[1]=bit32.band(bytes[1],0xBF) + 0x40 ;\nbytes[10]=bit32.band(bytes[10],0xBF) + 0x40 ;\nend\nelseif (lf ==2) then\nbytes[6]=bit32.band(bytes[6],0x0F);\nif (functionId==21) then \nbytes[1]=bit32.band(bytes[1],0xBF);\nbytes[10]=bit32.band(bytes[10],0xBF);\nend\nend\nbytes[9]= 0xC0+bit32.lshift((bit32.band(bytes[1],0x0F)+ bit32.band(bytes[2],0x0F) + bit32.band( bytes[3],0x0F) +bit32.band( bytes[4],0x0F) +  bit32.rshift(bit32.band(bytes[6],0xF0),4) ),4) ;\nss=exts[18]; \nif (ss ==1) then\nbytes[9]= bytes[9]+0x04;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes1={};\nif (timing_on<600)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0x80;\nelse \nbytes[2]=bytes[2]+0x90;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60));\nelseif (timing_on>600 and timing_on<1200)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0xA0;\nelse \nbytes[2]=bytes[2]+0xB0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60))-10;\nelseif (timing_on>1200 and timing_on<=1440)  then\nif (timing_on%60==0) then\nbytes[2]=bytes[2]+0xC0;\nelse \nbytes[2]=bytes[2]+0xD0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_on\/60))-20;\nend\nbytes1[1]=bytes[1];\nbytes1[2]=bytes[2];\nbytes1[3]=bytes[3];\nbytes1[4]=bytes[4];\nbytes1[5]=bytes[5];\nbytes1[6]=bytes[6];\nbytes1[7]=bytes[7];\nbytes1[8]=bytes[8];\nbytes1[9]= 0xC0+bit32.lshift((bit32.band(bytes1[1],0x0F)+ bit32.band(bytes1[2],0x0F) + bit32.band( bytes1[3],0x0F) +bit32.band( bytes1[4],0x0F) +  bit32.rshift(bit32.band(bytes1[6],0xF0),4) ),4) ;\nbytes1[10]=bytes[1];\nbytes1[11]=bytes[2];\nbytes1[12]=bytes[3];\nbytes1[13]=bytes[4]+0x10;;\nbytes1[14]=bytes[5];\nbytes1[15]=bit32.band(timing_on,0xFF);\nbytes1[16]=bit32.rshift(bit32.band(timing_on,0xF00),8);\nbytes1[17]=0;\nbytes1[18]= bit32.band(bytes1[10],0x0F) + bit32.band( bytes1[11],0x0F) +   bit32.band(bytes1[12],0x0F) +   bit32.band(bytes1[13],0x0F) +  bit32.rshift(bit32.band(bytes1[15],0xF0),4);\nbytes1[18]=bit32.lshift((0x0A+bit32.band(bytes1[18],0x0F)),4)+0x02;\nbytes1[19]=bytes[1];\nbytes1[20]=bytes[2];\nbytes1[21]=bytes[3];\nbytes1[22]=bytes[4]+0x20;\nbytes1[23]=bytes[5];\nbytes1[24]=bytes[15];\nbytes1[25]=bytes[16];\nbytes1[26]=bytes[17];\nbytes1[27]= bit32.band(bytes1[19],0x0F) + bit32.band( bytes1[20],0x0F) +   bit32.band(bytes1[21],0x0F) +   bit32.band(bytes1[22],0x0F) +  bit32.rshift(bit32.band(bytes1[24],0xF0),4)+bit32.rshift(bit32.band(bytes1[26],0xF0),4);\nbytes1[27]=bit32.lshift((0x0A+bit32.band(bytes1[27],0x0F)),4);\nbytes=bytes1;\nreturn;\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes1={};\nif (timing_off<600)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0x80;\nelse \nbytes[2]=bytes[2]+0x90;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60));\nelseif (timing_off>600 and timing_off<1200)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0xA0;\nelse \nbytes[2]=bytes[2]+0xB0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60))-10;\nelseif (timing_off>1200 and timing_off<=1440)  then\nif (timing_off%60==0) then\nbytes[2]=bytes[2]+0xC0;\nelse \nbytes[2]=bytes[2]+0xD0;\nend\nbytes[3]=bytes[3]+(math.floor(timing_off\/60))-20;\nend\nbytes1[1]=bytes[1];\nbytes1[2]=bytes[2];\nbytes1[3]=bytes[3];\nbytes1[4]=bytes[4];\nbytes1[5]=bytes[5];\nbytes1[6]=bytes[6];\nbytes1[7]=bytes[7];\nbytes1[8]=bytes[8];\nbytes1[9]= 0xC0+bit32.lshift((bit32.band(bytes1[1],0x0F)+ bit32.band(bytes1[2],0x0F) + bit32.band( bytes1[3],0x0F) +bit32.band( bytes1[4],0x0F) +  bit32.rshift(bit32.band(bytes1[6],0xF0),4) ),4) ;\nbytes1[10]=bytes[1];\nbytes1[11]=bytes[2];\nbytes1[12]=bytes[3];\nbytes1[13]=bytes[4]+0x10;;\nbytes1[14]=bytes[5];\nbytes1[15]=0;\nbytes1[16]=bit32.lshift(bit32.band(timing_off,0x0F),4);\nbytes1[17]=bit32.rshift(bit32.band(timing_off,0xFF0),4);\nbytes1[18]= bit32.band(bytes1[10],0x0F) + bit32.band( bytes1[11],0x0F) +   bit32.band(bytes1[12],0x0F) +   bit32.band(bytes1[13],0x0F) +  bit32.rshift(bit32.band(bytes1[16],0xF0),4)+  bit32.rshift(bit32.band(bytes1[17],0xF0),4);\nbytes1[18]=bit32.lshift((0x0A+bit32.band(bytes1[18],0x0F)),4)+0x01;\nbytes1[19]=bytes[1];\nbytes1[20]=bytes[2];\nbytes1[21]=bytes[3];\nbytes1[22]=bytes[4]+0x20;\nbytes1[23]=bytes[5];\nbytes1[24]=bytes[15];\nbytes1[25]=bytes[16];\nbytes1[26]=bytes[17];\nbytes1[27]= bit32.band(bytes1[19],0x0F) + bit32.band( bytes1[20],0x0F) +   bit32.band(bytes1[21],0x0F) +   bit32.band(bytes1[22],0x0F) +  bit32.rshift(bit32.band(bytes1[24],0xF0),4)+bit32.rshift(bit32.band(bytes1[26],0xF0),4);\nbytes1[27]=bit32.lshift((0x0A+bit32.band(bytes1[27],0x0F)),4);\nbytes=bytes1;\nreturn;\nend\nend\nend\nif (functionId==6) then\nbytes[1]=bit32.bor(bytes[1],0x40);\nbytes[10]=bit32.bor(bytes[10],0x40);\nelse if (functionId==7) then\nbytes[1]=bit32.band(bytes[1],0xBF);\nbytes[10]=bit32.band(bytes[10],0xBF);\nend\nend\nbytes[18]=bit32.band(bytes[18],0x0F)+bit32.lshift(( 0x0A+bit32.band(bytes[10],0x0F) + bit32.band( bytes[11],0x0F) +   bit32.band(bytes[12],0x0F) +   bit32.band(bytes[13],0x0F) +  bit32.rshift(bit32.band(bytes[15],0xF0),4) +   bit32.rshift(bit32.band(bytes[17],0xF0),4)),4) ;","301":"610,580","306":"1","305":"482","1517":"8@106&1-2*0|106@8&1-1*0|5@8&1-1*0|5@106&1-2*0|22@106&0-2*1","1506":"0,1","1017":"0808001314005B5C00@0808011314015B5C01@080B001213005A5B00@080B011213015A5B01@080C00101101585901@080C01101100585900@080F00101100585900@080F01101101585901@080D00111200595A00@080D01111201595A01@080E001F2000676800@080E011F2001676801@051000343800@051001343801@051002343802@051003343803@051200444800@051201444804@056A00707400@056A01707404@056A02707408@0B1600000100484900777800@0B1601000101484901777800@0B1602000100484900777801","1516":"9@30-1440,30&9|10@30-1440,30&9","888888":[{"fname":"","fkey":"TURBO","fid":8},{"exts":{"1509":"4&3|13&3|22&3","306":"1","303":"4&610,20000|8&610,40000,9000,4500|13&610,20000|17&610,40000,9000,4500|22&610,20000","302":"610,1680","301":"610,580","300":"9000,4500"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"Dry","fid":15},{"fname":"","fkey":"Show Temp","fid":16},{"fname":"","fkey":"ECO","fid":18},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"mute","fid":106}],"1012":"060508014D5001060508044D50040C0508000C10094D50005458090F0204010508034A4C014D5003808401060508024D5002","303":"4&610,20000|8&610,40000,9000,4500|13&610,20000","1505":"S&0,2,3","302":"610,1680","1509":"4&3|13&3","1507":"0,1"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3},{"_id":"kk_3_1956_2132","key":{"1001":"00020001","1518":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=(bytes[2]&0x0F)+0xA0 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=(bytes1[2]&0x0F)+0xC0  \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=(timing_on&0xFF) \nbytes1[16]=((timing_on>>8)&0x0F) \nbytes1[17]=0 \nbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xA0  \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xC0 \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=((timing_off&0x0F)<<4) \n\tbytes1[17]=(timing_off>>4) \n\tbytes1[15]=0 \n\tbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x01 \nend\nbytes=bytes1 \nend","1013":"03020400030204010302040203020403","1002":"09490020500201000060","300":"9000,4500","1015":"060102012C3001060102002C3002060102002C3003060102002C3004060102002C3005060102002C3006060102012C3007060102012C3009060102012C300B060102002C3000","1008":"0705100A01030507","1515":"13|0-1|0|CHAFD@14|0-1|0|CHAFD@15|0-1|0|CD@16|0-3|0|CHAFD@08|0-1|0|CH@11|1,0-1|2|CHAFD@22|0-1|0|CHD@09|0-1440,30|1|CHAFD@10|0-1440,30|0|CHAFD","1503":"T","1003":"020101","1522":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=bit32.band(bytes[2],0x0F)+0xA0 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=bit32.band(bytes1[2],0x0F)+0xC0  \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=bit32.band(timing_on,0xFF) \nbytes1[16]=bit32.band(bit32.rshift(timing_on,8),0x0F) \nbytes1[17]=0 \nbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xA0  \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xC0 \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=bit32.lshift(bit32.band(timing_off,0x0F),4) \n\tbytes1[17]=bit32.rshift(timing_off,4) \n\tbytes1[15]=0 \n\tbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x01 \nend\nbytes=bytes1 \nend","301":"640,560","306":"1","305":"197","1517":"2@22&1-1*0","1506":"0,1,2,3,4,5,6,7,8,9","1017":"050D00111200@050D01111201@050E001F2000@050E011F2001@050F00101100@050F01101101@051000343800@051001343801@051002343802@051003343803@050800131400@050801131401@050B00121300@050B01121301@051600000100@051601000101","1516":"10@30-1440,30&9|9@30-1440,30&9","888888":[{"fname":"","fkey":"TURBO","fid":8},{"exts":{"1509":"4&3|13&3","306":"1","305":"482","1002":"12419A20500211200080419A2060021E000062","303":"4&640,20000|8&640,40000,9000,4500|13&640,20000","302":"640,1680","301":"640,560","300":"9000,4500"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"Dry","fid":15},{"fname":"","fkey":"Show Temp","fid":16},{"fname":"","fkey":"sleep","fid":22}],"1012":"0305080103050804030508000305080303050802","303":"4&640,20000","302":"640,1680","1509":"4&3"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3},{"_id":"kk_3_1956_12265","key":{"1001":"00020000","1013":"03040700030407040304070203040706","1002":"06108000060000","300":"9000,4500","1015":"0307080003070801","1008":"0404000505","1503":"NA","1003":"0201800201400201C00201200201A00201600201E00201100201900201500201D00201300201B00201700201F0","301":"560,560","305":"322","888888":[],"1012":"030004010300040500030004090300040D","302":"560,1680","1509":"-1&4"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3},{"_id":"kk_3_1956_3472","key":{"1001":"00020770","1013":"03080C0103080C0203080C0403080C08","1002":"09191200000000247820","300":"4500,2400","1015":"03383C0703383C0103383C0203383C0303383C04","1008":"13051000000102030405060708090A0B0C0D0E0F","307":"1","1503":"T|S&1,2,3","1003":"020616020617020618020619020620020621020622020623020624020625020626020627020628020629020630","301":"450,450","1504":"S&0","306":"1","305":"347","1506":"0,1,2,3,4","888888":[],"1012":"030C1002030C1008030C100A030C1004030C1001","303":"-1&450,21000,4500,950","1505":"T|S&0,2,3","302":"450,950"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3},{"_id":"kk_3_1956_3457","key":{"1001":"02030002010C","1013":"03080A0003080A0303080A0203080A01","1002":"04690F0008","300":"4000,2000","1015":"030C1007030C1003030C100B","1503":"NA","1003":"020301","301":"1150,1050","1504":"S&0","306":"1","305":"342","1506":"0,1,2","888888":[],"1012":"030A0C00030A0C0100030A0C02","1505":"NA","302":"1150,3250"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3},{"_id":"kk_3_1956_4628","key":{"1001":"00020080","1518":"bytes[9]=(((bytes[1]&0xF0)+(bytes[2]&0xF0)+0x60+0x80)&0xF0)+(((bytes[1]&0x0F)+(bytes[2]&0x0F)+0x04)&0x0F);","1013":"03000408030004010300040203000404","1002":"098841000064008000AD","300":"9100,2600","1015":"03090A0103090A00","1503":"T","1511":"bytes[8]=(byte)((byte)((byte)(bytes[0]&0xF0)+(byte)(bytes[1]&0xF0)+(byte)0x60+(byte)0x80)+(byte)(((byte)(bytes[0]&0x0F)+(byte)(bytes[1]&0x0F)+(byte)0x04)&0x0F));","1003":"020101","1522":"bytes[9]=bit32.band((bit32.band(bytes[1],0xF0)+bit32.band(bytes[2],0xF0)+0x60+0x80),0xF0)+bit32.band((bit32.band(bytes[1],0x0F)+bit32.band(bytes[2],0x0F)+0x04),0x0F);","301":"600,730","1504":"S&0","306":"1","305":"1165","888888":[],"1012":"030408080304080B0304080C0304080A03040809","1505":"S&0,2,3","302":"600,1920"},"frequency":38000,"type":2,"source":"kk","brand":"1956","order":999,"device":3}]},"encoding":"UTF-8","language":"ZH_CN"}