{"status":0,"data":{"tree":{},"others":[{"_id":"kk_3_2731_2607","key":{"1001":"00020041","1518":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=(bytes[2]&0x0F)+0xA0 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=(bytes1[2]&0x0F)+0xC0  \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=(timing_on&0xFF) \nbytes1[16]=((timing_on>>8)&0x0F) \nbytes1[17]=0 \nbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xA0  \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xC0 \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=((timing_off&0x0F)<<4) \n\tbytes1[17]=(timing_off>>4) \n\tbytes1[15]=0 \n\tbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x01 \nend\nbytes=bytes1 \nend","1013":"03020400030204010302040203020403","1002":"09490020500211200060","300":"9000,4500","1015":"060102012C3001060102002C3002060102002C3003060102002C3004060102002C3005060102002C3006060102012C3007060102012C3009060102012C300B060102002C3000","1008":"0805100C010305070A","1515":"13|0-1|0|CHAFD@14|0-1|0|CHAFD@21|1-9|0|CHAFD@15|0-1|0|CD@12|1,0-1|0|H@16|0-3|0|CHAFD@08|0-1|0|CH@11|1,0-1|2|CHAFD@22|0-1|0|CHD@09|0-1440,30|1|CHAFD@10|0-1440,30|0|CHAFD","1503":"T","1003":"020101","1522":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=bit32.band(bytes[2],0x0F)+0xA0 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=bit32.band(bytes1[2],0x0F)+0xC0  \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=bit32.band(timing_on,0xFF) \nbytes1[16]=bit32.band(bit32.rshift(timing_on,8),0x0F) \nbytes1[17]=0 \nbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xA0  \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xC0 \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=bit32.lshift(bit32.band(timing_off,0x0F),4) \n\tbytes1[17]=bit32.rshift(timing_off,4) \n\tbytes1[15]=0 \n\tbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x01 \nend\nbytes=bytes1 \nend","301":"645,540","306":"1","305":"197","1517":"2@22&1-1*0","1506":"0,1,2,3,4,5,6,7,8,9","1017":"050D00111200@050D01111201@050E001F2000@050E011F2001@051501282C01@051502282C0D@051503282C00@051504282C02@051505282C03@051506282C04@051507282C05@051508282C06@051509282C0C@050F00101100@050F01101101@050C00101101@050C01101100@051000343800@051001343801@051002343802@051003343803@050800131400@050801131401@050B00121300@050B01121301@051600000100@051601000101","1516":"10@30-1440,30&9|9@30-1440,30&9","888888":[{"fname":"","fkey":"TURBO","fid":8},{"exts":{"1509":"4&3|13&3","306":"1","305":"482","1002":"12419A20500211200080419A2060021E000062","303":"4&645,20700|8&645,40700,8930,4500|13&645,20700","302":"645,1680","301":"645,541","300":"9000,4500"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"Dry","fid":15},{"fname":"","fkey":"Show Temp","fid":16},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22}],"1012":"0305080103050804030508000305080303050802","303":"4&645,20700","302":"645,1680","1509":"4&3","1507":"0,1,2,3,4,5,6,7,8"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":1,"device":3},{"_id":"kk_3_2731_2807","key":{"1001":"00020520","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=(bytes[9]&0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=(bytes[9]|0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=(bytes[9]|0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","1011":"033C400F","1013":"03454800034548020345480303454805","1002":"0E23CB26010024030F380000000083","300":"3660,1800","1015":"03424507034245000342450103424502034245030342450403424505","1008":"0401000D0D","1515":"22|0-1|0|CHAFD@9|10-1440,10|1|CHAFD@10|10-1440,10|0|CHAFD","1503":"T","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=bit32.band(bytes[9],0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","301":"400,400","1504":"T|S&0","306":"1","305":"137","1517":"22@5&1-3*0|5@22&1-1*0|","1506":"0,1,2,3,4,5,6","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22}],"1012":"0334380303343801063438083C3E07063438073C3E07063438023C3E07","1505":"T","302":"400,1400"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":2,"device":3},{"_id":"kk_3_2731_6302","key":{"1001":"00020800","1518":"if(functionId==1) then\nif(power==0) then\nbytes[6]=bytes[6]+0x02;\nbytes[17]=bytes[17]+0x02;\nelseif(power==1) then\nbytes[6]=bytes[6]+0x01;\nbytes[17]=bytes[17]+0x01;\nend\nend","1013":"032C2E00032C2E02032C2E03032C2E01","1016":"04066C6D0104076C6D01","1002":"11400014806380187020904000000800204D","300":"3500,1700","1015":"036C7000036C7007036C7006036C7005036C7004036C7003036C7002","1008":"0503001010F2","1503":"NA","1511":"if(functionId==1){ if(power==0) { bytes[5]=(byte)(bytes[5]+0x02); bytes[16]=(byte)(bytes[16]+0x02);} elseif(power==1) { bytes[5]=(byte)(bytes[5]+0x01); bytes[16]=(byte)(bytes[16]+0x01);} }","1003":"020602","301":"450,450","1504":"T|S&0","306":"1","305":"92","1506":"0,1,2,3,4,5,6","888888":[],"1012":"03282C0803282C040003282C0003282C0C","302":"450,1250"},"frequency":38690,"type":2,"source":"kk","brand":"2731","order":3,"device":3},{"_id":"kk_3_2731_3232","key":{"1001":"000406E70718","1518":"if((functionId==1)and(power==1)) then\nbytes[7]=(bytes[7]|0x02);\nbytes[8]=(bytes[8]&0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=(~bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=(~bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=(bytes[7]&0xFD);\nbytes[8]=(~bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=(bytes[7]&0x9D);\nbytes[8]=(~bytes[7]);\nend\nend\nend","1011":"0644480F4C50000644480E4C50010644480D4C50020644480C4C50030644480B4C50040644480A4C5005064448094C5006064448084C5007064448074C5008064448064C5009064448054C500A064448044C500B064448034C500C064448024C500D064448014C500E","1013":"06303307383B0006303304383B0306303305383B0206303306383B01","1016":"070124280F2C3000070224280E2C3001070324280D2C3002070424280C2C3003070524280A2C3005070624280B2C3004070724280B2C300407092428092C300607102428092C300607152428082C300707162428062C300907082428052C300A070B2428042C300B071B2428002C300F07092428092C3006070A2428092C300607162428062C300907082428052C300A070B2428042C300B071B2428002C300F","1002":"0CFF00FF00FF00F50AD6292AD5","300":"6000,7400","1015":"063436023C3E01063436013C3E02063436033C3E00","1515":"22|0-1|0|CHAFD@21|1-2|0|CHAFD@11|0-1|2|CHAFD@27|0-1|1|C@8|0-1|0|CH@9|0-1440,60|1|CHAFD@10|0-1440,60|0|CHAFD","1503":"T","1522":"if((functionId==1)and(power==1)) then\nbytes[7]=bit32.bor(bytes[7],0x02);\nbytes[8]=bit32.band(bytes[8],0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=bit32.band(bytes[7],0xFD);\nbytes[8]=bit32.bnot(bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=bit32.band(bytes[7],0x9D);\nbytes[8]=bit32.bnot(bytes[7]);\nend\nend\nend","301":"560,560","306":"1","305":"412","1506":"0,1,2","1017":"0815013334013B3C00@0815023334003B3C01@0816003738013F4000@0816013738003F4001@0808001415011C1D00@0808011415001C1D01@080B001718011F2000@080B011718001F2001@081B00101101181900@081B01101100181901","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27}],"1012":"0640440D484C0206404407484C080640440F484C0006404409484C060640440B484C04","303":"-1&7400,560","1505":"T|S&0,2,3","302":"560,1680"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":4,"device":3},{"_id":"kk_3_2731_11692","key":{"1001":"020881","1005":"020A00020A03020A02020A01","1514":"1&1&1A00060ECE01001147001000100010003001000400860043000000146300101002|6&&1A00060ECE0100114700100010001000300100040086004300000014630010106D|7&&1A00060ECE0100114700100010001000300100040086004300000014630010106C","1011":"000003404402034044030340440403404405034044060340440703404408034044090340440A0340440B0340440C0340440D0340440E","1016":"0401444801","1002":"0F1463001010FC08308101000000004E","1502":"T&16,17","300":"3333,1640","1501":"T&16,17","1008":"0502000B0E64","1503":"T","301":"421,424","1510":"1&1&3333,1640,421,424,421,424,421,1216,421,424,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,1000|6&&3333,1640,421,424,421,424,421,1216,421,424,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,1216,421,424,421,1216,421,1216,421,424,421,1216,421,1216,421,424,421,1000|7&&3333,1640,421,424,421,424,421,1216,421,424,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,1216,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,424,421,424,421,424,421,1216,421,424,421,424,421,424,421,424,421,424,421,1216,421,1216,421,424,421,1216,421,1216,421,424,421,1000","1504":"T","306":"1","305":"587","888888":[],"1012":"064448004C5001064448004C5004064448064C5000064448004C5003064448004C5002","1505":"T&16,17|S&1,2,3","302":"421,1216"},"frequency":37900,"type":2,"source":"kk","brand":"2731","order":5,"device":3},{"_id":"kk_3_2731_5159","key":{"1001":"00020000","1011":"032C3001","1013":"06262800282900062628022829000626280128290006262800282901","1002":"070300000050000F","1502":"NA","300":"500,3500","1015":"032024050320240003202401032024020320240303202404","1008":"0404000606","1503":"NA","301":"500,550","305":"77","1506":"0,1,2,3,4,5","888888":[],"1012":"03292C00000003292C0303292C04","303":"-1&3400,500","1505":"S&0,2,3","302":"500,1600","1509":"-1&4"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":999,"device":3},{"_id":"kk_3_2731_5593","key":{"1001":"00040BF20D52","1518":"if(mode==4)then\nbytes[14]=0x81\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x62\nelseif(power==1)then\nbytes[14]=0x02\nend\nend\nreturn\nend\nif(mode==3)then\nif(windSpeed==1)then\nbytes[14]=0x61\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x42\nelseif(power==1)then\nbytes[14]=0xE1\nend\nend\nelseif(windSpeed==2)then\nbytes[14]=0x71\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x52\nelseif(power==1)then\nbytes[14]=0xF1\nend\nend\nelseif(windSpeed==3)then\nbytes[14]=0x91\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x72\nelseif(power==1)then\nbytes[14]=0x12\nend\nend\nend\nreturn\nend\nif(temperature<20)then\na=((bytes[6]&0x0F)<<4)+((bytes[6]&0xF0)>>4)+((bytes[7]&0x0F)<<4)+((bytes[7]&0xF0)>>4)+0xF5\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=((a&0x0F)<<4)+((a&0xF0)>>4)\nelseif((temperature<30)and(temperature>19))then\na=((bytes[6]&0x0F)<<4)+((bytes[6]&0xF0)>>4)+((bytes[7]&0x0F)<<4)+((bytes[7]&0xF0)>>4)+0xE6\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=((a&0x0F)<<4)+((a&0xF0)>>4)\nelseif(temperature==30)then\na=((bytes[6]&0x0F)<<4)+((bytes[6]&0xF0)>>4)+((bytes[7]&0x0F)<<4)+((bytes[7]&0xF0)>>4)+0xD7\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=((a&0x0F)<<4)+((a&0xF0)>>4)\nend","1013":"0003282C0103282C0203282C04","1010":"030104A0","1002":"0E491DB6E200116200000000F400D1","1502":"NA","300":"3350,1650","1501":"S&0","1503":"NA","1003":"020661020671020681020691020602020612020622020632020642020652020662020672020682020692020603","1522":"if(mode==4)then\nbytes[14]=0x81\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x62\nelseif(power==1)then\nbytes[14]=0x02\nend\nend\nreturn\nend\nif(mode==3)then\nif(windSpeed==1)then\nbytes[14]=0x61\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x42\nelseif(power==1)then\nbytes[14]=0xE1\nend\nend\nelseif(windSpeed==2)then\nbytes[14]=0x71\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x52\nelseif(power==1)then\nbytes[14]=0xF1\nend\nend\nelseif(windSpeed==3)then\nbytes[14]=0x91\nif( functionId==1) then \nif(power==0)then\nbytes[14]=0x72\nelseif(power==1)then\nbytes[14]=0x12\nend\nend\nend\nreturn\nend\nif(temperature<20)then\na=bit32.lshift(bit32.band(bytes[6],0x0F),4)+bit32.rshift(bit32.band(bytes[6],0xF0),4)+bit32.lshift(bit32.band(bytes[7],0x0F),4)+bit32.rshift(bit32.band(bytes[7],0xF0),4)+0xF5\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=bit32.lshift(bit32.band(a,0x0F),4)+bit32.rshift(bit32.band(a,0xF0),4)\nelseif((temperature<30)and(temperature>19))then\na=bit32.lshift(bit32.band(bytes[6],0x0F),4)+bit32.rshift(bit32.band(bytes[6],0xF0),4)+bit32.lshift(bit32.band(bytes[7],0x0F),4)+bit32.rshift(bit32.band(bytes[7],0xF0),4)+0xE6\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=bit32.lshift(bit32.band(a,0x0F),4)+bit32.rshift(bit32.band(a,0xF0),4)\nelseif(temperature==30)then\na=bit32.lshift(bit32.band(bytes[6],0x0F),4)+bit32.rshift(bit32.band(bytes[6],0xF0),4)+bit32.lshift(bit32.band(bytes[7],0x0F),4)+bit32.rshift(bit32.band(bytes[7],0xF0),4)+0xD7\nif( functionId==1) then \nif(power==0)then\nbytes[12]=0xF8\na=a+0x0E\nelseif(power==1)then\nbytes[12]=0xF2\na=a+0x08\nend\nend\nbytes[14]=bit32.lshift(bit32.band(a,0x0F),4)+bit32.rshift(bit32.band(a,0xF0),4)\nend","301":"400,450","1004":"0405110662000004051206000405140600","1504":"T|S&0","306":"1","305":"137","1506":"0","888888":[],"1505":"T|S&0,2,3","302":"400,1250"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":999,"device":3},{"_id":"kk_3_2731_4749","key":{"1518":"if (functionId==1) then \nbytes[3]=bytes[3]-8;\nend\nbytes[2]=(~bytes[1]);\nbytes[4]=(~bytes[3]);","1011":"03040801","1013":"03000401030004020300040403000408","1010":"09060090016F02D0032F09070080017F02D0032F","1002":"0411EECC33","1502":"NA","300":"3400,3400","307":"1","1503":"T","1511":"if(functionId==1){bytes[2]=(byte) (bytes[2]-8);} bytes[1]=(byte)~bytes[0];bytes[3]=(byte)~bytes[2];","1508":"2","1522":"if (functionId==1) then \nbytes[3]=bytes[3]-8;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nbytes[4]=bit32.bnot(bytes[3]);","301":"860,860","1004":"0202CC0004001002C904001102CD0202CB","1504":"T","306":"1","305":"1225","888888":[],"303":"-1&3400,3400,860,13500","302":"860,2560"},"frequency":38000,"type":2,"source":"kk","brand":"2731","order":999,"device":3}]},"encoding":"UTF-8","language":"ZH_CN"}