{"status":0,"data":{"tree":{},"others":[{"_id":"kk_3_149_11862","key":{"1001":"020511020521","1518":"if(exts~=nil) then\nif(functionId==22) then\nlf=exts[22]; \nif (lf ==1) then\nbytes[6]=0x61;\nelseif (lf==0) then\nbytes[6]=0x71;\nend\nend\nif(functionId==31) then\nld=exts[31]; \nif (ld ==1) then\nbytes[6]=0x61; bytes[12]=0xF4;\nelseif (ld==0) then\nbytes[6]=0x71;\nelseif (ld==2) then\nbytes[6]=0x61;bytes[12]=0xF2;\nelseif (ld==3) then\nbytes[6]=0x61;bytes[12]=0xF6;\nend\nend\nif(functionId==9) then\non=exts[9]; \nif((on~=nil)and(on>0) and (on<=720))then\nbytes[8]=0xC0+math.floor(on\/60) ;\nbytes[11]=(on%60);\nelseif ((on~=nil)and (on==0)) then\nbytes[8]=0x40;\nend\nend\nif(functionId==10) then\noff=exts[10]; \nif((off~=nil)and(off>0) and (off<=720))then\nbytes[8]=0x80+math.floor(off\/60) ;\nbytes[11]=(off%60);\n\nend\nend\n\n\n\nend\nbytes[13]=(((bytes[1]>>4)&0x0F)~(bytes[1]&0x0F));\nfor i=2,12,1 do\n  bytes[13]=((bytes[13]~((bytes[i]>>4)&0x0F))~(bytes[i]&0x0F));\nend\nif(bytes[13]%2==0) then\n   bytes[13]=((bytes[13]+1)<<4)+1;\n   return;\nelseif(bytes[13]%2==1) then\n   bytes[13]=((bytes[13]-1)<<4)+1;\nend","1013":"03303402033034030330340503303407","1010":"05070531080F0302053103030531030405310305053103160A20052705610A04031F070803090581030A0581","1002":"0DAA5ACF1001312200088000F0FF","1502":"T&16,17","300":"3790,1890","1501":"T&16,17","1515":"9|0-720,30|1|CHAFD@10|0-720,30|0|CHAFD@22|0-1|0|CHA@31|0-3|0|CHAFD@39|1-1|0|CHAFD","1503":"T","1511":"bytes[12] =(byte)( (bytes[0]>>>4) ^( bytes[0]&0x0F));for (int i = 1; i < 12; i++){bytes[12] = (byte) (bytes[12] ^( bytes[i]>>>4) ^(bytes[i]&0x0F));}  if((bytes[12])%2==0){ bytes[12]= (byte)(((bytes[12]+1)<<4)+1);return;}  if((bytes[12])%2==1){ bytes[12]= (byte)(((bytes[12]-1)<<4)+1);}","1003":"000002040102040202040302040402040502040602040702040802040902040A02040B02040C02040D","1522":"if(exts~=nil) then\nif(functionId==22) then\nlf=exts[22]; \nif (lf ==1) then\nbytes[6]=0x61;\nelseif (lf==0) then\nbytes[6]=0x71;\nend\nend\nif(functionId==31) then\nld=exts[31]; \nif (ld ==1) then\nbytes[6]=0x61; bytes[12]=0xF4;\nelseif (ld==0) then\nbytes[6]=0x71;\nelseif (ld==2) then\nbytes[6]=0x61;bytes[12]=0xF2;\nelseif (ld==3) then\nbytes[6]=0x61;bytes[12]=0xF6;\nend\nend\nif(functionId==9) then\non=exts[9]; \nif((on~=nil)and(on>0) and (on<=720))then\nbytes[8]=0xC0+math.floor(on\/60) ;\nbytes[11]=(on%60);\nelseif ((on~=nil)and (on==0)) then\nbytes[8]=0x40;\nend\nend\nif(functionId==10) then\noff=exts[10]; \nif((off~=nil)and(off>0) and (off<=720))then\nbytes[8]=0x80+math.floor(off\/60) ;\nbytes[11]=(off%60);\n\nend\nend\n\n\n\nend\nbytes[13]=bit32.bxor(bit32.band(bit32.rshift(bytes[1],4),0x0F),bit32.band(bytes[1],0x0F));\nfor i=2,12,1 do\n  bytes[13]=bit32.bxor(bit32.bxor(bytes[13],bit32.band(bit32.rshift(bytes[i],4),0x0F)),bit32.band(bytes[i],0x0F));\nend\nif(bytes[13]%2==0) then\n   bytes[13]=bit32.lshift((bytes[13]+1),4)+1;\n   return;\nelseif(bytes[13]%2==1) then\n   bytes[13]=bit32.lshift((bytes[13]-1),4)+1;\nend","301":"470,470","1504":"T","306":"1","305":"357","1506":"1","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"anion","fid":31},{"fname":"","fkey":"Switch Display","fid":39}],"1012":"0334380203343801062428003438000624280034380406242800343803","1505":"T","302":"470,1400"},"frequency":38100,"type":2,"source":"kk","brand":"149","order":10,"device":3},{"_id":"149_2927","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1011":"09080C0F282C01484C0F","1002":"0C0F8DFFFE107200010F8DFFFE","1502":"T&16,17","1501":"T&16,17","1503":"T|S&1,2,3","1007":"0603FC07030BFC0603EC07130BEC0603DC07230BDC0603CC07330BCC0603BC07430BBC","301":"511,1600","1004":"06010D05F2090D06010E05F1090E06010F05F0090F06010B05F4090B06010C05F3090C","1504":"T&16,17|S&0","305":"247","1506":"0,1,2,3,4","888888":[],"303":"3&511,20450|7&511,20450","1505":"T|S&0,2,3","302":"511,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":20,"device":3},{"_id":"149_3437","key":{"1001":"000203FD","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22] \nif (sp~=nil and sp>0) then\nbytes[4]=0xF5\nelseif (sp==0) then \nbytes[4]=0xF4\nend\nend\nbytes1 = {} \nif(functionId==9) then\ntiming_on=exts[9] \nbytes1[1]=bytes[1]  \nbytes1[2]=bytes[2] \nbytes1[3]=bytes[3] \nbytes1[4]=0xFB \nbytes1[5]= (~bytes[1]) +0x20;\nbytes1[6]=(~bytes[2]) \nbytes1[7]=(~bytes[3]) \nbytes1[8]=(~bytes[4])\nbytes1[9]=bytes[1] \nbytes1[10]=bytes[2] \nbytes1[11]=bytes[3] \nbytes1[12]=bytes[4] \nif((timing_on~=nil)and(timing_on==0))then  \nbytes1[13]=0x0B\nbytes1[14]=0xFF\nbytes1[15]=0xFF\nbytes1[16]=0xF7\n\nelseif((timing_on~=nil)and(timing_on>0))then  \nbytes1[13]=0x03\nbytes1[16]=0xF7\nif( (timing_on%60)==0 )then\nbytes1[15]= 0xFF\nelse \n bytes1[15]= 0x1F\nend\nif(timing_on==30)then bytes1[14]= 0xFE\nelseif(timing_on==60)then bytes1[14]= 0xEF\nelseif(timing_on==90)then bytes1[14]= 0xEE\nelseif(timing_on==120)then bytes1[14]= 0xDF\nelseif(timing_on==150)then bytes1[14]= 0xDE\nelseif(timing_on==180)then bytes1[14]= 0xCF\nelseif(timing_on==210)then bytes1[14]= 0xCE\nelseif(timing_on==240)then bytes1[14]= 0xBF\nelseif(timing_on==270)then bytes1[14]= 0xBE\nelseif(timing_on==300)then bytes1[14]= 0xAF\nelseif(timing_on==330)then bytes1[14]= 0xAE\nelseif(timing_on==360)then bytes1[14]= 0x9F\nelseif(timing_on==390)then bytes1[14]= 0x9E\nelseif(timing_on==420)then bytes1[14]= 0x8F\nelseif(timing_on==450)then bytes1[14]= 0x8E \nelseif(timing_on==480)then bytes1[14]= 0x7F\nelseif(timing_on==510)then bytes1[14]= 0x7E\nelseif(timing_on==540)then bytes1[14]= 0x6F\nelseif(timing_on==570)then bytes1[14]= 0x6E\nelseif(timing_on==600)then bytes1[14]= 0x5F\nelseif(timing_on==660)then bytes1[14]= 0x4F\nelseif(timing_on==720)then bytes1[14]= 0x3F\nend\nend\n\nbytes1[17]=(~bytes1[13])+0x20;\nbytes1[18]=(~bytes1[14])\nbytes1[19]=(~bytes1[15])\nbytes1[20]=(~bytes1[16])\nbytes1[21]=bytes1[13]\nbytes1[22]=bytes1[14]\nbytes1[23]=bytes1[15]\nbytes1[24]=bytes1[16]\nbytes=bytes1 ;\nreturn;\nelseif(functionId==10) then\ntiming_off=exts[10] \nbytes1[1]=bytes[1]  \nbytes1[2]=bytes[2] \nbytes1[3]=bytes[3] \nbytes1[4]=0xFB \nbytes1[5]=(~bytes[1]) +0x20;\nbytes1[6]=(~bytes[2]) \nbytes1[7]=(~bytes[3])  \nbytes1[8]=(~bytes[4]) \nbytes1[9]=bytes[1] \nbytes1[10]=bytes[2] \nbytes1[11]=bytes[3] \nbytes1[12]=bytes[4] \nif((timing_off~=nil)and(timing_off==0))then  \nbytes1[13]=0x0F\nbytes1[14]=0xFF\nbytes1[15]=0xFF\nbytes1[16]=0xF7\n\nelseif((timing_off~=nil)and(timing_off>0))then  \nbytes1[13]=0x07\nbytes1[16]=0xF7\nif( (timing_off%60)==0 )then\nbytes1[15]= 0xFF\nelse \n bytes1[15]= 0x1F\nend\nif(timing_off==30)then bytes1[14]= 0xFE\nelseif(timing_off==60)then bytes1[14]= 0xEF\nelseif(timing_off==90)then bytes1[14]= 0xEE\nelseif(timing_off==120)then bytes1[14]= 0xDF\nelseif(timing_off==150)then bytes1[14]= 0xDE\nelseif(timing_off==180)then bytes1[14]= 0xCF\nelseif(timing_off==210)then bytes1[14]= 0xCE\nelseif(timing_off==240)then bytes1[14]= 0xBF\nelseif(timing_off==270)then bytes1[14]= 0xBE\nelseif(timing_off==300)then bytes1[14]= 0xAF\nelseif(timing_off==330)then bytes1[14]= 0xAE\nelseif(timing_off==360)then bytes1[14]= 0x9F\nelseif(timing_off==390)then bytes1[14]= 0x9E\nelseif(timing_off==420)then bytes1[14]= 0x8F\nelseif(timing_off==450)then bytes1[14]= 0x8E \nelseif(timing_off==480)then bytes1[14]= 0x7F\nelseif(timing_off==510)then bytes1[14]= 0x7E\nelseif(timing_off==540)then bytes1[14]= 0x6F\nelseif(timing_off==570)then bytes1[14]= 0x6E\nelseif(timing_off==600)then bytes1[14]= 0x5F\nelseif(timing_off==660)then bytes1[14]= 0x4F\nelseif(timing_off==720)then bytes1[14]= 0x3F\nend\nend\n\nbytes1[17]=(~bytes1[13])+0x20;\nbytes1[18]=(~bytes1[14])\nbytes1[19]=(~bytes1[15])\nbytes1[20]=(~bytes1[16])\nbytes1[21]=bytes1[13]\nbytes1[22]=bytes1[14]\nbytes1[23]=bytes1[15]\nbytes1[24]=bytes1[16]\nbytes=bytes1 ;\nreturn;\n\nend\nend\nif(functionId==1) then\n  if(power==0) then\n    bytes[4]=0xFE;\n  end\nend\nbytes[5]= (~bytes[1]) +0x20;\nbytes[6]= (~bytes[2]);\nbytes[7]= (~bytes[3]);\nbytes[8]= (~bytes[4]);\nbytes[9]= bytes[1] ;\nbytes[10]= bytes[2] ;\nbytes[11]= bytes[3] ;\nbytes[12]= bytes[4] ;","1011":"000003080C0E03080C0D03080C0C03080C0B03080C0A03080C0903080C0803080C0703080C0603080C0503080C0403080C0303080C02","1013":"0310140F0310140E0310140C0310140A","1010":"0306038C0307038C","1002":"0C0F6DFFFC109200030F6DFFFC","1502":"T&16,17","1501":"T&16,17","1515":"22|0-1|0|CHAD@09|0-600,30$660-720,60|1|CHAD@10|0-600,30$660-720,60|0|CHAD","1503":"T","1511":"if(functionId==1) {   if(power==0){     bytes[3]=(byte)0xFE; } } bytes[4]= ~bytes[0]+0x20;  bytes[5]= ~bytes[1]; bytes[6]= ~bytes[2];  bytes[7]= ~bytes[3]; bytes[8]= bytes[0];  bytes[9]= bytes[1];  bytes[10]= bytes[2];  bytes[11]= bytes[3];","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22] \nif (sp~=nil and sp>0) then\nbytes[4]=0xF5\nelseif (sp==0) then \nbytes[4]=0xF4\nend\nend\nbytes1 = {} \nif(functionId==9) then\ntiming_on=exts[9] \nbytes1[1]=bytes[1]  \nbytes1[2]=bytes[2] \nbytes1[3]=bytes[3] \nbytes1[4]=0xFB \nbytes1[5]= bit32.bnot(bytes[1]) +0x20;\nbytes1[6]=bit32.bnot(bytes[2]) \nbytes1[7]=bit32.bnot(bytes[3]) \nbytes1[8]=bit32.bnot(bytes[4])\nbytes1[9]=bytes[1] \nbytes1[10]=bytes[2] \nbytes1[11]=bytes[3] \nbytes1[12]=bytes[4] \nif((timing_on~=nil)and(timing_on==0))then  \nbytes1[13]=0x0B\nbytes1[14]=0xFF\nbytes1[15]=0xFF\nbytes1[16]=0xF7\n\nelseif((timing_on~=nil)and(timing_on>0))then  \nbytes1[13]=0x03\nbytes1[16]=0xF7\nif( (timing_on%60)==0 )then\nbytes1[15]= 0xFF\nelse \n bytes1[15]= 0x1F\nend\nif(timing_on==30)then bytes1[14]= 0xFE\nelseif(timing_on==60)then bytes1[14]= 0xEF\nelseif(timing_on==90)then bytes1[14]= 0xEE\nelseif(timing_on==120)then bytes1[14]= 0xDF\nelseif(timing_on==150)then bytes1[14]= 0xDE\nelseif(timing_on==180)then bytes1[14]= 0xCF\nelseif(timing_on==210)then bytes1[14]= 0xCE\nelseif(timing_on==240)then bytes1[14]= 0xBF\nelseif(timing_on==270)then bytes1[14]= 0xBE\nelseif(timing_on==300)then bytes1[14]= 0xAF\nelseif(timing_on==330)then bytes1[14]= 0xAE\nelseif(timing_on==360)then bytes1[14]= 0x9F\nelseif(timing_on==390)then bytes1[14]= 0x9E\nelseif(timing_on==420)then bytes1[14]= 0x8F\nelseif(timing_on==450)then bytes1[14]= 0x8E \nelseif(timing_on==480)then bytes1[14]= 0x7F\nelseif(timing_on==510)then bytes1[14]= 0x7E\nelseif(timing_on==540)then bytes1[14]= 0x6F\nelseif(timing_on==570)then bytes1[14]= 0x6E\nelseif(timing_on==600)then bytes1[14]= 0x5F\nelseif(timing_on==660)then bytes1[14]= 0x4F\nelseif(timing_on==720)then bytes1[14]= 0x3F\nend\nend\n\nbytes1[17]=bit32.bnot(bytes1[13])+0x20;\nbytes1[18]=bit32.bnot(bytes1[14])\nbytes1[19]=bit32.bnot(bytes1[15])\nbytes1[20]=bit32.bnot(bytes1[16])\nbytes1[21]=bytes1[13]\nbytes1[22]=bytes1[14]\nbytes1[23]=bytes1[15]\nbytes1[24]=bytes1[16]\nbytes=bytes1 ;\nreturn;\nelseif(functionId==10) then\ntiming_off=exts[10] \nbytes1[1]=bytes[1]  \nbytes1[2]=bytes[2] \nbytes1[3]=bytes[3] \nbytes1[4]=0xFB \nbytes1[5]=bit32.bnot(bytes[1]) +0x20;\nbytes1[6]=bit32.bnot(bytes[2]) \nbytes1[7]=bit32.bnot(bytes[3])  \nbytes1[8]=bit32.bnot(bytes[4]) \nbytes1[9]=bytes[1] \nbytes1[10]=bytes[2] \nbytes1[11]=bytes[3] \nbytes1[12]=bytes[4] \nif((timing_off~=nil)and(timing_off==0))then  \nbytes1[13]=0x0F\nbytes1[14]=0xFF\nbytes1[15]=0xFF\nbytes1[16]=0xF7\n\nelseif((timing_off~=nil)and(timing_off>0))then  \nbytes1[13]=0x07\nbytes1[16]=0xF7\nif( (timing_off%60)==0 )then\nbytes1[15]= 0xFF\nelse \n bytes1[15]= 0x1F\nend\nif(timing_off==30)then bytes1[14]= 0xFE\nelseif(timing_off==60)then bytes1[14]= 0xEF\nelseif(timing_off==90)then bytes1[14]= 0xEE\nelseif(timing_off==120)then bytes1[14]= 0xDF\nelseif(timing_off==150)then bytes1[14]= 0xDE\nelseif(timing_off==180)then bytes1[14]= 0xCF\nelseif(timing_off==210)then bytes1[14]= 0xCE\nelseif(timing_off==240)then bytes1[14]= 0xBF\nelseif(timing_off==270)then bytes1[14]= 0xBE\nelseif(timing_off==300)then bytes1[14]= 0xAF\nelseif(timing_off==330)then bytes1[14]= 0xAE\nelseif(timing_off==360)then bytes1[14]= 0x9F\nelseif(timing_off==390)then bytes1[14]= 0x9E\nelseif(timing_off==420)then bytes1[14]= 0x8F\nelseif(timing_off==450)then bytes1[14]= 0x8E \nelseif(timing_off==480)then bytes1[14]= 0x7F\nelseif(timing_off==510)then bytes1[14]= 0x7E\nelseif(timing_off==540)then bytes1[14]= 0x6F\nelseif(timing_off==570)then bytes1[14]= 0x6E\nelseif(timing_off==600)then bytes1[14]= 0x5F\nelseif(timing_off==660)then bytes1[14]= 0x4F\nelseif(timing_off==720)then bytes1[14]= 0x3F\nend\nend\n\nbytes1[17]=bit32.bnot(bytes1[13])+0x20;\nbytes1[18]=bit32.bnot(bytes1[14])\nbytes1[19]=bit32.bnot(bytes1[15])\nbytes1[20]=bit32.bnot(bytes1[16])\nbytes1[21]=bytes1[13]\nbytes1[22]=bytes1[14]\nbytes1[23]=bytes1[15]\nbytes1[24]=bytes1[16]\nbytes=bytes1 ;\nreturn;\n\nend\nend\nif(functionId==1) then\n  if(power==0) then\n    bytes[4]=0xFE;\n  end\nend\nbytes[5]= bit32.bnot(bytes[1]) +0x20;\nbytes[6]= bit32.bnot(bytes[2]);\nbytes[7]= bit32.bnot(bytes[3]);\nbytes[8]= bit32.bnot(bytes[4]);\nbytes[9]= bytes[1] ;\nbytes[10]= bytes[2] ;\nbytes[11]= bytes[3] ;\nbytes[12]= bytes[4] ;","301":"420,1680","1504":"NA","305":"247","1506":"1","1516":"9&0-720,30&9|10&0-720,30&9","888888":[{"exts":{"307":"1","1002":"180F6DFFFC109200030F6DFFFC0F6DFFFC109200030F6DFFFC","303":"3&420,19600|7&420,19600|11&420,21000|15&420,19600|19&420,19600|-1&420,19600","302":"420,3780","301":"420,1680"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22}],"1012":"030C100D030C100E030810FF00030810EC","303":"3&420,19600|7&420,19600","1505":"T|S&1,2,3","302":"420,3780"},"frequency":38100,"type":2,"source":"kk","brand":"149","order":25,"device":3},{"_id":"149_2877","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1518":"if(functionId==1) then\n  if(power==0) then\n    bytes[4]=0xFE;\n\tbytes[8]=0x01;\n\tbytes[12]=0xFE;\n  end\nend","1011":"09080C0F282C01484C0F","1010":"0706038C07730B8C0707038C07730B8C","1002":"0C0FEDFFFC101200030FEDFFFC","1502":"T&16,17","1501":"T&16,17","1503":"T","1511":"if(functionId==1){if(power==0){bytes[3]=(byte)(0xFE);bytes[7]=(byte)(0x01);bytes[11]=(byte)(0xFE);}}","301":"510,1610","1004":"06010D05F2090D06010E05F1090E0601FF050009FF0C01EB02EF0514061009EB0AEF0601EC051309EC","1504":"T|S&0","305":"247","1506":"1","888888":[],"303":"3&510,20450|7&510,20450","1505":"T|S&0,2,3","302":"510,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":30,"device":3},{"_id":"149_2817","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1011":"09080C0F282C01484C0F","1002":"0C0F8DFFFC107200030F8DFFFC","1502":"T&16,17","1501":"T&16,17","1503":"T","1007":"0603FC07030BFC0603CC07330BCC0603BC07430BBC0603EC07130BEC0603DC07230BDC","301":"511,1600","1004":"06010D05F2090D06010E05F1090E06010F05F0090F06010B05F4090B06010C05F3090C","1504":"T&16,17|S&0","305":"247","1506":"0,1,2,3,4","888888":[],"303":"3&511,20450|7&511,20450","1505":"T|S&0,2,3","302":"511,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":40,"device":3},{"_id":"149_2842","key":{"1001":"000C00EA020A0311050506EA080A","1011":"090C10072428083C4007090C100B2428043C400B090C100324280C3C4003090C100D2428023C400D090C100524280A3C4005090C10092428063C4009090C100124280E3C4001090C100E2428013C400E090C10062428093C4006090C100A2428053C400A090C100224280D3C4002090C100C2428033C400C090C100424280B3C4004090C10082428073C4008090C100024280F3C4000","1013":"09080A03202200383A0309080A01202202383A0109080A02202201383A0209080A00202203383A00","1010":"0D06003A01EF03C10410063A07EF0D07003A01EF03C10410063A07EF","1002":"09FAE60101190EFAE601","1503":"T","301":"332,1860","1004":"0601E6041907E60601D6042907D60601FB040407FB06015604A907560601C7043807C7","1504":"S&0","306":"1","305":"252","1506":"1","888888":[],"303":"2&329,63430|5&329,61730","1505":"T|S&0,2,3","302":"329,3570","1509":"2&4|5&4|8&4"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":50,"device":3},{"_id":"149_2807","key":{"1001":"00020520","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=(bytes[9]&0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=(bytes[9]|0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=(bytes[9]|0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","1011":"033C400F","1013":"03454800034548020345480303454805","1002":"0E23CB26010024030F380000000083","300":"3660,1800","1015":"03424507034245000342450103424502034245030342450403424505","1008":"0401000D0D","1515":"22|0-1|0|CHAFD@9|10-1440,10|1|CHAFD@10|10-1440,10|0|CHAFD","1503":"T","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=bit32.band(bytes[9],0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","301":"400,400","1504":"T|S&0","306":"1","305":"137","1517":"22@5&1-3*0|5@22&1-1*0|","1506":"0,1,2,3,4,5,6","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22}],"1012":"0334380303343801063438083C3E07063438073C3E07063438023C3E07","1505":"T","302":"400,1400"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":60,"device":3},{"_id":"149_2822","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1011":"09080C0F282C01484C0F","1002":"0C0F85FFFC107A00030F85FFFC","1502":"T&16,17","1501":"T&16,17","1503":"T","1007":"0603FC07030BFC0603CC07330BCC0603BC07430BBC0603EC07130BEC0603DC07230BDC","301":"511,1600","1004":"06010505FA090506010605F9090606010705F8090706010305FC090306010405FB0904","1504":"T&16,17|S&0","305":"247","1506":"0,1,2,3,4","888888":[],"303":"3&511,20450|7&511,20450","1505":"T|S&0,2,3","302":"511,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":70,"device":3},{"_id":"149_2937","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1011":"09080C0F282C01484C0F","1002":"0C0F75FFFE108A00010F75FFFE","1502":"T&16,17","1501":"T&16,17","1503":"T|S&1,2,3","1007":"0603FC07030BFC0603EC07130BEC0603DC07230BDC0603CC07330BCC0603BC07430BBC","301":"511,1600","1004":"06010505FA090506010605F9090606010705F8090706010B05F4090B06010405FB0904","1504":"T&16,17|S&0","305":"247","1506":"0,1,2,3,4","888888":[],"303":"3&511,20450|7&511,20450","1505":"T|S&0,2,3","302":"511,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":80,"device":3},{"_id":"149_2862","key":{"1001":"000C0062020A039905050662080A","1011":"090C10072428083C4007090C100B2428043C400B090C100324280C3C4003090C100D2428023C400D090C100524280A3C4005090C10092428063C4009090C100124280E3C4001090C100E2428013C400E090C10062428093C4006090C100A2428053C400A090C100224280D3C4002090C100C2428033C400C090C100424280B3C4004090C10082428073C4008090C100024280F3C4000","1013":"09080A03202200383A0309080A01202202383A0109080A02202201383A0209080A00202203383A00","1010":"0D06003201EF03C90410063207EF0D07003201EF03C90410063207EF","1002":"0972E60189190E72E601","1503":"T","301":"332,1780","1004":"0601E6041907E60601D6042907D60601FB040407FB06015604A907560601C7043807C7","1504":"S&0","306":"1","305":"252","1506":"1","888888":[],"303":"2&335,63430|5&335,61660","1505":"T|S&0,2,3","302":"335,3570","1509":"2&4|5&4|8&4"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":90,"device":3},{"_id":"149_2942","key":{"1001":"000603FD07020BFD","1005":"0602FF06000AFF0602EF06100AEF0602CF06300ACF0602AF06500AAF","1011":"09080C0F282C01484C0F","1010":"070203FC07030BFC070303FC07030BFC070403FC07030BFC070503FC07030BFC0706038C07730B8C0707038C07730B8C","1002":"0C0F7DFFFE108200010F7DFFFE","1502":"T&16,17","1501":"T&16,17","1503":"T|S&1,2,3","301":"511,1600","1004":"06010D05F2090D06010E05F1090E06010F05F0090F06010B05F4090B06010C05F3090C","1504":"T&16,17|S&0","305":"247","1506":"1","888888":[],"303":"3&511,20450|7&511,20450","1505":"T|S&0,2,3","302":"511,3720"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":110,"device":3},{"_id":"149_2852","key":{"1001":"000C006A020A03910505066A080A","1011":"090C10072428083C4007090C100B2428043C400B090C100324280C3C4003090C100D2428023C400D090C100524280A3C4005090C10092428063C4009090C100124280E3C4001090C100E2428013C400E090C10062428093C4006090C100A2428053C400A090C100224280D3C4002090C100C2428033C400C090C100424280B3C4004090C10082428073C4008090C100024280F3C4000","1013":"09080A03202200383A0309080A01202202383A0109080A02202201383A0209080A00202203383A00","1010":"0D06003A01EF03C10410063A07EF0D07003A01EF03C10410063A07EF","1002":"097AE60181190E7AE601","1503":"T","301":"332,1780","1004":"0601E6041907E60601D6042907D60601FB040407FB06015604A907560601C7043807C7","1504":"S&0","306":"1","305":"252","1506":"1","888888":[],"303":"2&335,63430|5&335,61660","1505":"T|S&0,2,3","302":"335,3570","1509":"2&4|5&4|8&4"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":120,"device":3},{"_id":"kk_3_149_2607","key":{"1001":"00020041","1518":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=(bytes[2]&0x0F)+0xA0 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=(bytes1[2]&0x0F)+0xC0  \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=(timing_on&0xFF) \nbytes1[16]=((timing_on>>8)&0x0F) \nbytes1[17]=0 \nbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xA0  \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xC0 \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=((timing_off&0x0F)<<4) \n\tbytes1[17]=(timing_off>>4) \n\tbytes1[15]=0 \n\tbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x01 \nend\nbytes=bytes1 \nend","1013":"03020400030204010302040203020403","1002":"09490020500211200060","300":"9000,4500","1015":"060102012C3001060102002C3002060102002C3003060102002C3004060102002C3005060102002C3006060102012C3007060102012C3009060102012C300B060102002C3000","1008":"0805100C010305070A","1515":"13|0-1|0|CHAFD@14|0-1|0|CHAFD@21|1-9|0|CHAFD@15|0-1|0|CD@12|1,0-1|0|H@16|0-3|0|CHAFD@08|0-1|0|CH@11|1,0-1|2|CHAFD@22|0-1|0|CHD@09|0-1440,30|1|CHAFD@10|0-1440,30|0|CHAFD","1503":"T","1003":"020101","1522":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=bit32.band(bytes[2],0x0F)+0xA0 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=bit32.band(bytes1[2],0x0F)+0xC0  \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=bit32.band(timing_on,0xFF) \nbytes1[16]=bit32.band(bit32.rshift(timing_on,8),0x0F) \nbytes1[17]=0 \nbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xA0  \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xC0 \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=bit32.lshift(bit32.band(timing_off,0x0F),4) \n\tbytes1[17]=bit32.rshift(timing_off,4) \n\tbytes1[15]=0 \n\tbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x01 \nend\nbytes=bytes1 \nend","301":"645,540","306":"1","305":"197","1517":"2@22&1-1*0","1506":"0,1,2,3,4,5,6,7,8,9","1017":"050D00111200@050D01111201@050E001F2000@050E011F2001@051501282C01@051502282C0D@051503282C00@051504282C02@051505282C03@051506282C04@051507282C05@051508282C06@051509282C0C@050F00101100@050F01101101@050C00101101@050C01101100@051000343800@051001343801@051002343802@051003343803@050800131400@050801131401@050B00121300@050B01121301@051600000100@051601000101","1516":"10@30-1440,30&9|9@30-1440,30&9","888888":[{"fname":"","fkey":"TURBO","fid":8},{"exts":{"1509":"4&3|13&3","306":"1","305":"482","1002":"12419A20500211200080419A2060021E000062","303":"4&645,20700|8&645,40700,8930,4500|13&645,20700","302":"645,1680","301":"645,541","300":"9000,4500"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"Dry","fid":15},{"fname":"","fkey":"Show Temp","fid":16},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22}],"1012":"0305080103050804030508000305080303050802","303":"4&645,20700","302":"645,1680","1509":"4&3","1507":"0,1,2,3,4,5,6,7,8"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":140,"device":3},{"_id":"kk_3_149_3232","key":{"1001":"000406E70718","1518":"if((functionId==1)and(power==1)) then\nbytes[7]=(bytes[7]|0x02);\nbytes[8]=(bytes[8]&0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=(~bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=(~bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=(bytes[7]&0xFD);\nbytes[8]=(~bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=(bytes[7]&0x9D);\nbytes[8]=(~bytes[7]);\nend\nend\nend","1011":"0644480F4C50000644480E4C50010644480D4C50020644480C4C50030644480B4C50040644480A4C5005064448094C5006064448084C5007064448074C5008064448064C5009064448054C500A064448044C500B064448034C500C064448024C500D064448014C500E","1013":"06303307383B0006303304383B0306303305383B0206303306383B01","1016":"070124280F2C3000070224280E2C3001070324280D2C3002070424280C2C3003070524280A2C3005070624280B2C3004070724280B2C300407092428092C300607102428092C300607152428082C300707162428062C300907082428052C300A070B2428042C300B071B2428002C300F07092428092C3006070A2428092C300607162428062C300907082428052C300A070B2428042C300B071B2428002C300F","1002":"0CFF00FF00FF00F50AD6292AD5","300":"6000,7400","1015":"063436023C3E01063436013C3E02063436033C3E00","1515":"22|0-1|0|CHAFD@21|1-2|0|CHAFD@11|0-1|2|CHAFD@27|0-1|1|C@8|0-1|0|CH@9|0-1440,60|1|CHAFD@10|0-1440,60|0|CHAFD","1503":"T","1522":"if((functionId==1)and(power==1)) then\nbytes[7]=bit32.bor(bytes[7],0x02);\nbytes[8]=bit32.band(bytes[8],0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=bit32.band(bytes[7],0xFD);\nbytes[8]=bit32.bnot(bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=bit32.band(bytes[7],0x9D);\nbytes[8]=bit32.bnot(bytes[7]);\nend\nend\nend","301":"560,560","306":"1","305":"412","1506":"0,1,2","1017":"0815013334013B3C00@0815023334003B3C01@0816003738013F4000@0816013738003F4001@0808001415011C1D00@0808011415001C1D01@080B001718011F2000@080B011718001F2001@081B00101101181900@081B01101100181901","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27}],"1012":"0640440D484C0206404407484C080640440F484C0006404409484C060640440B484C04","303":"-1&7400,560","1505":"T|S&0,2,3","302":"560,1680"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":145,"device":3},{"_id":"kk_3_149_2812","key":{"1001":"020511020521","1518":"if(exts~=nil) then\nif(functionId==13) then\njk=exts[13]; \nif (jk ==1) then\nbytes[6]=0x61;\nbytes[12]=0xF8;\nelseif (jk==0) then\nbytes[6]=0x71;\nbytes[12]=0xF0;\nend\nend\nif(functionId==14) then\nsm=exts[14]; \nif (sm ==1) then\nbytes[6]=0x61;\nbytes[10]=0x89;\nelseif (sm==0) then\nbytes[6]=0x71;\nbytes[10]=0x80;\nend\nend\nif(functionId==22) then\nlf=exts[22]; \nif (lf ==1) then\nbytes[6]=0x61;\nelseif (lf==0) then\nbytes[6]=0x71;\nend\nend\nif(functionId==27) then\nqj=exts[27]; \nif (qj ==1) then\nbytes[6]=0x61;\nbytes[10]=0xA0;\nelseif (qj==0) then\nbytes[6]=0x71;\nbytes[10]=0x80;\nend\nend\nif(functionId==31) then\nld=exts[31]; \nif (ld ==1) then\nbytes[6]=0x61; \nbytes[12]=0xF4;\nelseif (ld==0) then\nbytes[6]=0x71;\nbytes[12]=0xF0;\nend\nend\nif(functionId==9) then\non=exts[9]; \nif((on~=nil)and(on>0) and (on<=720))then\nbytes[8]=0xC0+math.floor(on\/60) ;\nbytes[11]=(on%60);\nelseif ((on~=nil)and (on==0)) then\nbytes[8]=0x40;\nend\nend\nif(functionId==10) then\noff=exts[10]; \nif((off~=nil)and(off>0) and (off<=720))then\nbytes[8]=0x80+math.floor(off\/60) ;\nbytes[11]=(off%60);\n\nend\nend\n\n\n\nend\nbytes[13]=(((bytes[1]>>4)&0x0F)~(bytes[1]&0x0F));\nfor i=2,12,1 do\n  bytes[13]=((bytes[13]~((bytes[i]>>4)&0x0F))~(bytes[i]&0x0F));\nend\nif(bytes[13]%2==0) then\n   bytes[13]=((bytes[13]+1)<<4)+1;\n   return;\nelseif(bytes[13]%2==1) then\n   bytes[13]=((bytes[13]-1)<<4)+1;\nend","1013":"03303402033034030330340503303407","1010":"03020531050305310A04050405310A0403050531050605310A06050705310A06050B05610780030D0720030E070203160A10031B0A08031F070803090581030A0581","1002":"0DAA5ACF1001312200088000F0FF","1502":"T&16,17","300":"3700,1900","1501":"T&16,17","1515":"9|0-720,30|1|CHA@10|0-720,30|0|CHA@11|1-1|0|CHA@13|0-1|0|CHA@14|0-1|0|CHA@22|0-1|0|CHA@27|0-1|0|CHA@31|0-1|0|CHA","1503":"NA","1511":"bytes[12] =(byte)( (bytes[0]>>>4) ^( bytes[0]&0x0F));for (int i = 1; i < 12; i++){bytes[12] = (byte) (bytes[12] ^( bytes[i]>>>4) ^(bytes[i]&0x0F));}  if((bytes[12])%2==0){ bytes[12]= (byte)(((bytes[12]+1)<<4)+1);return;}  if((bytes[12])%2==1){ bytes[12]= (byte)(((bytes[12]-1)<<4)+1);}","1003":"000002040102040202040302040402040502040602040702040802040902040A02040B02040C02040D","1522":"if(exts~=nil) then\nif(functionId==13) then\njk=exts[13]; \nif (jk ==1) then\nbytes[6]=0x61;\nbytes[12]=0xF8;\nelseif (jk==0) then\nbytes[6]=0x71;\nbytes[12]=0xF0;\nend\nend\nif(functionId==14) then\nsm=exts[14]; \nif (sm ==1) then\nbytes[6]=0x61;\nbytes[10]=0x89;\nelseif (sm==0) then\nbytes[6]=0x71;\nbytes[10]=0x80;\nend\nend\nif(functionId==22) then\nlf=exts[22]; \nif (lf ==1) then\nbytes[6]=0x61;\nelseif (lf==0) then\nbytes[6]=0x71;\nend\nend\nif(functionId==27) then\nqj=exts[27]; \nif (qj ==1) then\nbytes[6]=0x61;\nbytes[10]=0xA0;\nelseif (qj==0) then\nbytes[6]=0x71;\nbytes[10]=0x80;\nend\nend\nif(functionId==31) then\nld=exts[31]; \nif (ld ==1) then\nbytes[6]=0x61; \nbytes[12]=0xF4;\nelseif (ld==0) then\nbytes[6]=0x71;\nbytes[12]=0xF0;\nend\nend\nif(functionId==9) then\non=exts[9]; \nif((on~=nil)and(on>0) and (on<=720))then\nbytes[8]=0xC0+math.floor(on\/60) ;\nbytes[11]=(on%60);\nelseif ((on~=nil)and (on==0)) then\nbytes[8]=0x40;\nend\nend\nif(functionId==10) then\noff=exts[10]; \nif((off~=nil)and(off>0) and (off<=720))then\nbytes[8]=0x80+math.floor(off\/60) ;\nbytes[11]=(off%60);\n\nend\nend\n\n\n\nend\nbytes[13]=bit32.bxor(bit32.band(bit32.rshift(bytes[1],4),0x0F),bit32.band(bytes[1],0x0F));\nfor i=2,12,1 do\n  bytes[13]=bit32.bxor(bit32.bxor(bytes[13],bit32.band(bit32.rshift(bytes[i],4),0x0F)),bit32.band(bytes[i],0x0F));\nend\nif(bytes[13]%2==0) then\n   bytes[13]=bit32.lshift((bytes[13]+1),4)+1;\n   return;\nelseif(bytes[13]%2==1) then\n   bytes[13]=bit32.lshift((bytes[13]-1),4)+1;\nend","1007":"02080F02080802080902080A02080B02080C02080D","301":"460,490","1504":"NA","306":"1","305":"357","1517":"22@6&0-6*1|22@7&0-6*1","1506":"0,1,2,3,4,5,6","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27},{"fname":"","fkey":"anion","fid":31}],"1012":"0334380203343801000006242800343803","1505":"T|S&1,2,3","302":"460,1400"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":999,"device":3},{"_id":"kk_3_149_8154","key":{"1518":"if(functionId==1) then\nbytes[2]=(bytes[2]&0x0F)+0x70;\nbytes[3]=(bytes[3]&0xF0)+0x05;\nend\nif(functionId==7) then\nbytes[2]=0xCF;\nbytes[3]=0x78;\nend\nbytes[4]=8\nbytes[5]=(~bytes[2])\nbytes[6]=(~bytes[3])\nbytes[7]=bytes[1]\nbytes[8]=bytes[2]\nbytes[9]=bytes[3]","1011":"0000030C100E030C100D030C100C030C100B030C100A030C1009030C1008030C1007030C1006030C1005030C1004030C1003030C1002","1013":"03121403031214020312140103121400","1002":"0905F67808098705F678","1502":"NA","1501":"T&16,17","1503":"T","1511":"if(functionId==1){\nbytes[1]=(byte) ((bytes[1]&0x0F)+0x70);\nbytes[2]=(byte) ((bytes[2]&((byte)0xF0))+0x05);\n}\nif(functionId==7){\nbytes[1]=(byte)0xCF;\nbytes[2]=0x78;\n}\n\nbytes[3]=8;\nbytes[4]=(byte)(~bytes[1]);\nbytes[5]=(byte)(~bytes[2]);\nbytes[6]=bytes[0];\nbytes[7]=bytes[1];\nbytes[8]=bytes[2];","1522":"if(functionId==1) then\nbytes[2]=bit32.band(bytes[2],0x0F)+0x70;\nbytes[3]=bit32.band(bytes[3],0xF0)+0x05;\nend\nif(functionId==7) then\nbytes[2]=0xCF;\nbytes[3]=0x78;\nend\nbytes[4]=8\nbytes[5]=bit32.bnot(bytes[2])\nbytes[6]=bit32.bnot(bytes[3])\nbytes[7]=bytes[1]\nbytes[8]=bytes[2]\nbytes[9]=bytes[3]","301":"340,1640","1504":"S&0","305":"805","1506":"1","888888":[],"1012":"0310120100060C100D10120303101202060C100E101200","303":"2&340,69000|5&340,80000","1505":"T|S&1,2,3","302":"340,3640","1509":"0&4|3&4|6&4"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":999,"device":3},{"_id":"kk_3_149_4307","key":{"1001":"00020204","1518":"if(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=600))then\nbytes[4]=(bytes[4]|0x08);\nbytes[5]=math.floor(timing_on\/30);\nelseif((timing_on~=nil)and(timing_on>600) and (timing_on<=1440))then \nbytes[4]=(bytes[4]|0x08);\nbytes[5]=0x14 + (math.floor(timing_on-600)\/60);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[4]=(bytes[4]|0x08);\nbytes[5]=math.floor(timing_off\/30);\nelseif((timing_off~=nil)and(timing_off>600) and (timing_off<=600))then\nbytes[4]=(bytes[4]|0x08);\nbytes[5]=0x14 + (math.floor(timing_off-600)\/60);\nend\nend\nend","1011":"000003181C0003181C0103181C0203181C0303181C0403181C0503181C0603181C0703181C0803181C0903181C0A03181C0B03181C0C","1013":"03161800031618030316180203161801","1016":"04011516010407101101","1002":"058306007200","1502":"T&16,17","300":"9000,4500","1501":"T&16,17","1515":"22|0-1|0|CHAD@09|0-600,30$660-1440,60|1|CHAFD@10|0-600,30$660-1440,60|0|CHAFD","1503":"T","1522":"if(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=600))then\nbytes[4]=bit32.bor(bytes[4],0x08);\nbytes[5]=math.floor(timing_on\/30);\nelseif((timing_on~=nil)and(timing_on>600) and (timing_on<=1440))then \nbytes[4]=bit32.bor(bytes[4],0x08);\nbytes[5]=0x14 + (math.floor(timing_on-600)\/60);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[4]=bit32.bor(bytes[4],0x08);\nbytes[5]=math.floor(timing_off\/30);\nelseif((timing_off~=nil)and(timing_off>600) and (timing_off<=600))then\nbytes[4]=bit32.bor(bytes[4],0x08);\nbytes[5]=0x14 + (math.floor(timing_off-600)\/60);\nend\nend\nend","301":"560,560","1504":"T|S&0","306":"1","305":"1797","1517":"22@5&0-3*1","1506":"1","1017":"051600141500@051601141501","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"sleep","fid":22}],"1012":"031C2002031C2000031C2001031C2004031C2003","1505":"T|S&1,2,3","302":"560,1680","1509":"-1&6"},"frequency":38000,"type":2,"source":"kk","brand":"149","order":999,"device":3}]},"encoding":"UTF-8","language":"ZH_CN"}