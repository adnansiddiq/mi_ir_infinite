{"status":0,"data":{"tree":{},"others":[{"_id":"kk_3_4385_2","key":{"1001":"00020400","1005":"0205A0020560020540020520","1518":"if(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif((timing_on==0)or(timing_on==nil))then return; end\nif((timing_on>0) and (timing_on<=1440)) then\n\tbytes[4]=bytes[4]+0x40;\n\tbytes[8]=bytes[8]+math.floor(timing_on\/60);\n\tbytes[9]=bytes[9]+timing_on%60;\n\tbytes[14]=0;\n\tfor  i=1,13,1 do\n\t\tbytes[14]=(bytes[14]+bytes[i]);end\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif((timing_off==0)or(timing_off==nil))then return; end  \nif((timing_off>0) and (timing_off<=1440)) then\n\tbytes[4]=bytes[4]+0x20;\n\tbytes[6]=bytes[6]+math.floor(timing_off\/60);\n\tbytes[7]=timing_off%60;\n\tbytes[14]=0;\n\tfor  i=1,13,1 do\n\t\tbytes[14]=(bytes[14]+bytes[i]);end\nend\nend\nend\nif(functionId==1) then\nif(power==1)then\nbytes[5]=0;\nbytes[14]=0;\nfor  i=1,13,1 do\n\t\tbytes[14]=(bytes[14]+bytes[i]);end\nend\nend","1011":"03080C01","1010":"03010C0503020C0603030C0003040C0103050C0403060C0203070C02030C0C1603130C0703250C0B030B0C1503090C10030A0C10","1002":"0EA682000040A0002000000000052D","300":"3078,3078,3078,4538","1015":"030C100C030C1002030C100A030C1000","1008":"0401000D0D","1515":"19|0-1|2|CHAFD@11|0-0|2|CHAFD@12|1,0-1|0|HA@22|0-1|0|CHAFD@09|0-720,30$780-1440,60|1|CHAFD@10|0-720,30$780-1440,60|0|CHAFD","1511":"if(extKeyStatus == void) {return;}  int timing_on = extKeyStatus.get(9, 0);   int timing_off = extKeyStatus.get(10, 0);   if(timing_on>0&&timing_on<=1440){ \tbytes[3]=(byte)(bytes[3]+0x40); \tbytes[7]=(byte)(bytes[7]+timing_on\/60); \tbytes[8]=(byte)(bytes[8]+timing_on%60); \tbytes[13]=(byte)0; \tfor(int i=0;i<13;i++){ \t\tbytes[13]=(byte)(bytes[13]+bytes[i]); \t}} else if(timing_off>0&&timing_off<=1440){ \tbytes[3]=(byte)(bytes[3]+0x20); \tbytes[5]=(byte)(bytes[5]+timing_off\/60); \tbytes[6]=(byte)(timing_off%60); \tbytes[13]=(byte)0; \tfor(int i=0;i<13;i++){ \t\tbytes[13]=(byte)(bytes[13]+bytes[i]); \t} }","301":"548,548","1004":"04010C072004010C078004010C070004010C07C004010C0740","305":"67","1506":"0,1,2,3","1017":"0513001E1F00@0513011E1F01@050C00202100@050C01202101@0816002C2D00404100@0816012C2D01404101","888888":[{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Formaldehyde","fid":19},{"fname":"","fkey":"sleep","fid":22}],"302":"548,1686"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":1,"device":3},{"_id":"kk_3_4385_11842","key":{"1001":"00020520","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=(bytes[9]&0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=(bytes[9]|0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=(bytes[9]|0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nif(functionId==1) then\nbytes[9]=0x40;\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","1013":"03454800034548020345480303454805","1002":"0E23CB26010024030F380000000083","300":"3100,1640","1015":"0342450703424500","1008":"0401000D0D","1515":"8|0-1|0|CHFD@18|0-1|0|CH@22|0-1|0|CHAFD@9|10-1440,10|1|CHAFD@10|10-1440,10|0|CHAFD@11|1,0-1|0|CHAFD","1503":"T","1511":"if(functionId==1){ bytes[8]=(byte)0x40;  int i; bytes[13]=(byte)0;for (i=0;i<13;i++){ bytes[13]=(byte) (bytes[13]+bytes[i]); }}","1003":"0207FF","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=bit32.band(bytes[9],0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x34;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[9]=bit32.bor(bytes[9],0x40);\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nif(functionId==1) then\nbytes[9]=0x40;\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","301":"450,410","1504":"T|S&0","306":"1","305":"212","1517":"22@5&0-3*0|5@22&1-1*0|8@18&1-1*0|18@8&1-1*0","1506":"0,1","1017":"051200282900@051201282901@050800313200@050801313201@050B00292A01@050B01292A00","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"ECO","fid":18},{"fname":"","fkey":"sleep","fid":22}],"1012":"0334380303343801063438083C3E07063438073C3E07063438023C3E07","1505":"T|S&1,2,3","302":"450,1110"},"frequency":37900,"type":2,"source":"kk","brand":"4385","order":2,"device":3},{"_id":"kk_3_4385_3232","key":{"1001":"000406E70718","1518":"if((functionId==1)and(power==1)) then\nbytes[7]=(bytes[7]|0x02);\nbytes[8]=(bytes[8]&0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=(~bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=(~bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=(bytes[7]&0xFD);\nbytes[8]=(~bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=(bytes[7]&0x9D);\nbytes[8]=(~bytes[7]);\nend\nend\nend","1011":"0644480F4C50000644480E4C50010644480D4C50020644480C4C50030644480B4C50040644480A4C5005064448094C5006064448084C5007064448074C5008064448064C5009064448054C500A064448044C500B064448034C500C064448024C500D064448014C500E","1013":"06303307383B0006303304383B0306303305383B0206303306383B01","1016":"070124280F2C3000070224280E2C3001070324280D2C3002070424280C2C3003070524280A2C3005070624280B2C3004070724280B2C300407092428092C300607102428092C300607152428082C300707162428062C300907082428052C300A070B2428042C300B071B2428002C300F07092428092C3006070A2428092C300607162428062C300907082428052C300A070B2428042C300B071B2428002C300F","1002":"0CFF00FF00FF00F50AD6292AD5","300":"6000,7400","1015":"063436023C3E01063436013C3E02063436033C3E00","1515":"22|0-1|0|CHAFD@21|1-2|0|CHAFD@11|0-1|2|CHAFD@27|0-1|1|C@8|0-1|0|CH@9|0-1440,60|1|CHAFD@10|0-1440,60|0|CHAFD","1503":"T","1522":"if((functionId==1)and(power==1)) then\nbytes[7]=bit32.bor(bytes[7],0x02);\nbytes[8]=bit32.band(bytes[8],0xFD);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9];  \nif(timing_on==nil) then timing_on=-1; end\n\nif((timing_on>0) and (timing_on<=1440)) then\nif (timing_on==60) then bytes[1]=0x9E;\nelseif (timing_on==120) then bytes[1]=0x9D;\nelseif (timing_on==180) then bytes[1]=0x9C;\nelseif (timing_on==240) then bytes[1]=0x9B;\nelseif (timing_on==300) then bytes[1]=0x9A;\nelseif (timing_on==360) then bytes[1]=0x99;\nelseif (timing_on==420) then bytes[1]=0x98;\nelseif (timing_on==480) then bytes[1]=0x97;\nelseif (timing_on==540) then bytes[1]=0x96;\nelseif (timing_on==600) then bytes[1]=0x95;\nelseif (timing_on==660) then bytes[1]=0x94;\nelseif (timing_on==720) then bytes[1]=0x93;\nelseif (timing_on==780) then bytes[1]=0x92;\nelseif (timing_on==840) then bytes[1]=0x91;\nelseif (timing_on==900) then bytes[1]=0x90;\nelseif (timing_on==960) then bytes[1]=0x8F;\nelseif (timing_on==1020) then bytes[1]=0x8E;\nelseif (timing_on==1080) then bytes[1]=0x8D;\nelseif (timing_on==1140) then bytes[1]=0x8C;\nelseif (timing_on==1200) then bytes[1]=0x8B;\nelseif (timing_on==1260) then bytes[1]=0x8A;\nelseif (timing_on==1320) then bytes[1]=0x89;\nelseif (timing_on==1380) then bytes[1]=0x88;\nelseif (timing_on==1440) then bytes[1]=0x87;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nelseif(power==0) then\ntiming_off=exts[10];\nif(timing_off==nil) then timing_off=-1; end  \nif((timing_off>0) and (timing_off<=1440)) then\nif (timing_off==60) then bytes[1]=0x5E;\nelseif (timing_off==120) then bytes[1]=0x5D;\nelseif (timing_off==180) then bytes[1]=0x5C;\nelseif (timing_off==240) then bytes[1]=0x5B;\nelseif (timing_off==300) then bytes[1]=0x5A;\nelseif (timing_off==360) then bytes[1]=0x59;\nelseif (timing_off==420) then bytes[1]=0x58;\nelseif (timing_off==480) then bytes[1]=0x57;\nelseif (timing_off==540) then bytes[1]=0x56;\nelseif (timing_off==600) then bytes[1]=0x55;\nelseif (timing_off==660) then bytes[1]=0x54;\nelseif (timing_off==720) then bytes[1]=0x53;\nelseif (timing_off==780) then bytes[1]=0x52;\nelseif (timing_off==840) then bytes[1]=0x51;\nelseif (timing_off==900) then bytes[1]=0x50;\nelseif (timing_off==960) then bytes[1]=0x4F;\nelseif (timing_off==1020) then bytes[1]=0x4E;\nelseif (timing_off==1080) then bytes[1]=0x4D;\nelseif (timing_off==1140) then bytes[1]=0x4C;\nelseif (timing_off==1200) then bytes[1]=0x4B;\nelseif (timing_off==1260) then bytes[1]=0x4A;\nelseif (timing_off==1320) then bytes[1]=0x49;\nelseif (timing_off==1380) then bytes[1]=0x48;\nelseif (timing_off==1440) then bytes[1]=0x47;\nend\nbytes[2]=bit32.bnot(bytes[1]);\nend\nend\nif(functionId==27) then\nbytes[7]=bit32.band(bytes[7],0xFD);\nbytes[8]=bit32.bnot(bytes[7]);\nelseif(functionId==22) then\nsleep=exts[22]\nif(sleep==nil) then sleep=-1; end\nif(sleep==1) then\nbytes[7]=bit32.band(bytes[7],0x9D);\nbytes[8]=bit32.bnot(bytes[7]);\nend\nend\nend","301":"560,560","306":"1","305":"412","1506":"0,1,2","1017":"0815013334013B3C00@0815023334003B3C01@0816003738013F4000@0816013738003F4001@0808001415011C1D00@0808011415001C1D01@080B001718011F2000@080B011718001F2001@081B00101101181900@081B01101100181901","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27}],"1012":"0640440D484C0206404407484C080640440F484C0006404409484C060640440B484C04","303":"-1&7400,560","1505":"T|S&0,2,3","302":"560,1680"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":10,"device":3},{"_id":"kk_3_4385_2573","key":{"1001":"00020900","1005":"0204A0020460020440020420","1518":"if(power==1) then\nbytes[10]=(bytes[10]&0xDF);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nif ((timing_on%60)==30) then\nbytes[6]=0x1E;\nend\nbytes[10]=(bytes[10]|0x80);\nbytes[5]=bytes[5]+math.floor(timing_on\/60);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nif ((timing_off%60)==30) then\nbytes[6]=0x1E;\nend\nbytes[10]=(bytes[10]|0x40);\nbytes[5]=bytes[5]+math.floor(timing_off\/60);\nend\nend\nend\nbytes[13]=0;\nfor i=1,12,1 do\nbytes[13]=bytes[13]+bytes[i];\nend","1011":"03080D01","1010":"03010B0503020B0603030B0003040B0103050B0403060B0203070B02030C0B1603080B0803160B0B03830B15031B0B1903180B0503090B0D030A0B0D","1002":"0DC340E000A000200000200001C4","300":"8979,4525","1015":"030D1000030D1007","1008":"0401000C0C","1515":"8|0-1|0|CH@12|1,0-1|2|H@22|0-1|0|CHAD@27|0-1|1|CHAFD@24|0-0|1|CHAFD@131|0-0|0|CHAFD@09|0-600,30$660-1440,60|1|CHAFD@10|0-600,30$660-1440,60|0|CHAFD","1522":"if(power==1) then\nbytes[10]=bit32.band(bytes[10],0xDF);\nend\nif(exts~=nil) then\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nif ((timing_on%60)==30) then\nbytes[6]=0x1E;\nend\nbytes[10]=bit32.bor(bytes[10],0x80);\nbytes[5]=bytes[5]+math.floor(timing_on\/60);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nif ((timing_off%60)==30) then\nbytes[6]=0x1E;\nend\nbytes[10]=bit32.bor(bytes[10],0x40);\nbytes[5]=bytes[5]+math.floor(timing_off\/60);\nend\nend\nend\nbytes[13]=0;\nfor i=1,12,1 do\nbytes[13]=bytes[13]+bytes[i];\nend","301":"550,550","306":"1","305":"652","1517":"13@5&0-3*0|8@5&0-3*3|1@27&1-1*0|13@3&16-30*26","1017":"050C004B4C00@050C014B4C01@050800292A00@050801292A01@051600353600@051601353601@051B004D4E00@051B014D4E01","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Mold Proof","fid":24},{"fname":"","fkey":"Cleaning","fid":27},{"fname":"","fkey":"display","fid":131}],"1012":"0330330103303304033033000330330603303302","302":"550,1693"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":20,"device":3},{"_id":"kk_3_4385_8139","key":{"1001":"00020520","1518":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=(bytes[9]&0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x30;\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","1011":"033C400F","1013":"03454800034548020345480303454805","1002":"0E23CB26010024030F380000008003","300":"3000,1550","1015":"0342450703424500","1008":"0401000D0D","1515":"8|0-1|0|CHF@9|30-1440,30|1|CHAFD@10|30-1440,30|0|CHAFD@12|0-1|0|HA@13|0-1|0|CHAFD@18|0-1|0|CH@21|1-2|0|CHAFD@22|0-1|0|CH@24|0-1|0|CD@34|0-1|0|CHAFD","1503":"T","1522":"if(exts~=nil) then\nif(functionId==22) then\nsp=exts[22];\nif (sp~=nil and sp>0) then\nbytes[9]=bit32.band(bytes[9],0xF8)+1;\nend\nend\nif(power==1) then\ntiming_on=exts[9]; \nif((timing_on~=nil)and(timing_on>0) and (timing_on<=1440))then\nbytes[6]=0x30;\nbytes[11]=math.floor(timing_on\/10);\nend\nelseif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=1440))then\nbytes[6]=0x2C;\nbytes[10]=math.floor(timing_off\/10);\nend\nend\nend\nbytes[14]=0;\nfor i=1,13,1 do\nbytes[14]=bytes[14]+bytes[i];\nend","301":"520,1050","1504":"T|S&0","306":"1","305":"805","1517":"8@5&0-3*3|5@8&1-1*0","1506":"0,1","1017":"050800313200@050801313201@050C00606101@050C01606100@050D00333400@050D01333401@051200282900@051201282901@051501646501@051502646500@051600474800@051601474801@051800323300@051801323301@052200292A00@052201292A01","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"ECO","fid":18},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Mold Proof","fid":24},{"fname":"","fkey":"Number Display","fid":34}],"1012":"0334380303343801063438083C4008063438073C4008063438023C4008","1505":"T|S&1,2,3","302":"520,2050"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":30,"device":3},{"_id":"kk_3_4385_2607","key":{"1001":"00020041","1518":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=(bytes[2]&0x0F)+0xA0 \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=(bytes1[2]&0x0F)+0xC0  \n\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=(timing_on&0xFF) \nbytes1[16]=((timing_on>>8)&0x0F) \nbytes1[17]=0 \nbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xA0  \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=(bytes1[2]&0x0F)+0xC0 \n\t\t\telse bytes1[2]=(bytes1[2]&0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=(((bytes1[1]&0x0F)+(bytes1[2]&0x0F)+(bytes1[3]&0x0F)+(bytes1[4]&0x0F)+(bytes1[6]>>4)+0x0C)<<4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=((timing_off&0x0F)<<4) \n\tbytes1[17]=(timing_off>>4) \n\tbytes1[15]=0 \n\tbytes1[18]=(((bytes1[9]>>4)+(bytes1[15]>>4)+(bytes1[16]>>4)+(bytes1[17]>>4)+0x0D)<<4)+0x01 \nend\nbytes=bytes1 \nend","1013":"03020400030204010302040203020403","1002":"09490020500211200060","300":"9000,4500","1015":"060102012C3001060102002C3002060102002C3003060102002C3004060102002C3005060102002C3006060102012C3007060102012C3009060102012C300B060102002C3000","1008":"0805100C010305070A","1515":"13|0-1|0|CHAFD@14|0-1|0|CHAFD@21|1-9|0|CHAFD@15|0-1|0|CD@12|1,0-1|0|H@16|0-3|0|CHAFD@08|0-1|0|CH@11|1,0-1|2|CHAFD@22|0-1|0|CHD@09|0-1440,30|1|CHAFD@10|0-1440,30|0|CHAFD","1503":"T","1003":"020101","1522":"if(exts~=nil) then\ntiming_on=exts[9] \ntiming_off=exts[10] \nbytes1={}  \nfor i=1,9,1 do bytes1[i]=bytes[i] bytes1[i+9]=bytes[i] end \nbytes1[13]=0x60 \nif(((timing_on==0)or(timing_on==nil))and((timing_off==0) or(timing_off==nil)))then return  end\nif((timing_on~=nil)and(timing_on>0)) then\nif(timing_on<600) then \n\tif(timing_on%60==0) then \n\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \nelseif((timing_on>=600)and(timing_on<1200)) then \n\tif(timing_on%60==0) then\n\t\tbytes1[2]=bit32.band(bytes[2],0x0F)+0xA0 \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0  \n\t\t\tend\nelseif(timing_on>=1200) then \n\tif(timing_on%60==0) then \n\t\tbytes[2]=bit32.band(bytes1[2],0x0F)+0xC0  \n\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\tend \nend\nbytes1[3]=bytes1[3]+math.floor((timing_on\/60)%10) \nbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \nbytes1[11]=bytes1[2] \nbytes1[12]=bytes1[3] \nbytes1[15]=bit32.band(timing_on,0xFF) \nbytes1[16]=bit32.band(bit32.rshift(timing_on,8),0x0F) \nbytes1[17]=0 \nbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x02 \nelseif((timing_off~=nil)and(timing_off>0))then\n\tif(timing_off<600) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x80  \n\t\t\telse \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0x90 \n\t\t\tend \n\telseif((timing_off>=600)and(timing_off<1200)) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xA0  \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xB0 \n\t\t\t\tend \n\telseif((timing_off)>=1200) then \n\t\tif(timing_off%60==0) then \n\t\t\tbytes1[2]=bit32.band(bytes1[2],0x0F)+0xC0 \n\t\t\telse bytes1[2]=bit32.band(bytes1[2],0x0F)+0xD0 \n\t\t\t\tend \n\tend\n\tbytes1[3]=bytes1[3]+math.floor((timing_off\/60)%10) \n\tbytes1[9]=bit32.lshift((bit32.band(bytes1[1],0x0F)+bit32.band(bytes1[2],0x0F)+bit32.band(bytes1[3],0x0F)+bit32.band(bytes1[4],0x0F)+bit32.rshift(bytes1[6],4)+0x0C),4) \n\tbytes1[11]=bytes1[2] \n\tbytes1[12]=bytes1[3] \n\tbytes1[16]=bit32.lshift(bit32.band(timing_off,0x0F),4) \n\tbytes1[17]=bit32.rshift(timing_off,4) \n\tbytes1[15]=0 \n\tbytes1[18]=bit32.lshift((bit32.rshift(bytes1[9],4)+bit32.rshift(bytes1[15],4)+bit32.rshift(bytes1[16],4)+bit32.rshift(bytes1[17],4)+0x0D),4)+0x01 \nend\nbytes=bytes1 \nend","301":"645,540","306":"1","305":"197","1517":"2@22&1-1*0","1506":"0,1,2,3,4,5,6,7,8,9","1017":"050D00111200@050D01111201@050E001F2000@050E011F2001@051501282C01@051502282C0D@051503282C00@051504282C02@051505282C03@051506282C04@051507282C05@051508282C06@051509282C0C@050F00101100@050F01101101@050C00101101@050C01101100@051000343800@051001343801@051002343802@051003343803@050800131400@050801131401@050B00121300@050B01121301@051600000100@051601000101","1516":"10@30-1440,30&9|9@30-1440,30&9","888888":[{"fname":"","fkey":"TURBO","fid":8},{"exts":{"1509":"4&3|13&3","306":"1","305":"482","1002":"12419A20500211200080419A2060021E000062","303":"4&645,20700|8&645,40700,8930,4500|13&645,20700","302":"645,1680","301":"645,541","300":"9000,4500"},"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"Air Change","fid":14},{"fname":"","fkey":"Dry","fid":15},{"fname":"","fkey":"Show Temp","fid":16},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22}],"1012":"0305080103050804030508000305080303050802","303":"4&645,20700","302":"645,1680","1509":"4&3","1507":"0,1,2,3,4,5,6,7,8"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":777,"device":3},{"_id":"kk_3_4385_4808","key":{"1001":"00020704","1518":"if (mode==2) then\n\tbytes[6]=0x16 \nend\nif(exts~=nil) then\nif (functionId==9)  then\non=exts[9]; \nif((on~=nil)and(on==0))then\nbytes[2]=0x00;\nelseif((on~=nil)and(on>0))then\nbytes[2]=0x60;\nbytes[1]=on\/60;\nend\nelseif (functionId==10)  then\noff=exts[10]; \nif((off~=nil)and(off==0))then\nbytes[2]=0x00;\nelseif((off~=nil)and(off>0))then\nbytes[2]=0xA0;\nbytes[5]=off\/60;\nend\nend\nend\n\tbytes[12]=0 \n\tfor  i=1,11,1 do\n\t\tbytes[12]=(bytes[12]+bytes[i]) end","1011":"034C5000034C5001034C5002034C5003034C5004034C5005034C5006034C5007034C5008034C5009034C500A034C500B034C500C034C500D034C500E","1013":"03383B0003383B0303383B0203383B01","1010":"030105000302050103030502030405030305050503060504030705040308050A03090510030A0511030B050B030C051A030D050C0315050703160509031B050F031C050D036A0517","1002":"0C00000020000300168020A57B","300":"6000,7400","1015":"033C3E01033C3E02","1008":"0401000B0B","1515":"8|0-1|0|CH@09|0-1440,60|1|CHAFD@10|0-1440,60|0|CHAFD@11|0-1|0|CHAFD@12|0-1|0|H@13|0-1|0|CHAFD@21|1-2|0|CHAFD@22|0-1|0|CHAFD@27|0-1|0|C@28|0-1|0|C@106|0-1|0|CHAF","1511":"if (mode==2){bytes[5]=(byte)0x16; } \t\tbytes[11]=0;\t\tint i=0;\tfor ( i=0;i<11;i++ )\t{bytes[11]=(byte)(bytes[11]+bytes[i]);}","301":"550,580","1504":"T","306":"1","305":"412","1517":"22@5&0-3*1|106@5&0-3*1|5@106&1-1*0","1017":"0508001C1D00@0508011C1D01@050B001F2000@050B011F2001@050C00404101@050C01404100@050D001E1F00@050D011E1F01@0515013B3C00@0515023B3C01@0516003F4000@0516013F4001@051B00181900@051B01181901@051C001B1C00@051C011B1C01@056A000F1000@056A010F1001","888888":[{"fname":"","fkey":"TURBO","fid":8},{"fname":"","fkey":"Timer On","fid":9},{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Light","fid":11},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"Health","fid":13},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Cleaning","fid":27},{"fname":"","fkey":"mute","fid":106}],"1012":"03484C0203484C0803484C0003484C0603484C04","303":"-1&7400,560","1505":"T|S&0,2,3","302":"550,1680"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":999,"device":3},{"_id":"kk_3_4385_4790","key":{"1001":"00020500","1013":"03454800034548020345480303454805","1002":"0E23CB26010004230F3800000C0083","300":"3200,1400","1015":"0342450703424500","1008":"0401000D0D","1515":"21|1-2|0|CHAFD","1003":"0207FF","301":"510,320","1504":"T|S&0","306":"1","305":"212","1506":"0,1","1017":"051501585C00@051502585C0E","888888":[{"fname":"","fkey":"lr_wind_mode","fid":21}],"1012":"0334380303343801063438083C3E07063438073C3E07063438023C3E07","1505":"S&0,2,3","302":"510,1110"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":999,"device":3},{"_id":"kk_3_4385_7636","key":{"1001":"000205C0","1518":"if(exts~=nil) then\nif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=480))then\nbytes[5]=(bytes[5]|0x04);\nbytes[7]=(bytes[7]|0x10);\nbytes[11]=math.floor(timing_off\/60);\nend\nend\nbytes[15]=0;\nfor i=1,14,1 do\nbytes[15]=bytes[15]+((bytes[i]&0xF0)>>4)+(bytes[i]&0x0F);\nend\nend","1013":"03262800032628020326280303262801","1016":"04072E2F01","1002":"0F566C0000200000280000000000001C","300":"8400,4200","1008":"0403000E0E","1515":"10|0-480,60|0|CHAFD@12|0-1|0|HA@21|1-2|0|CHAFD@22|0-1|0|CHAD@41|0-1|0|CHAFD@62|0-1|0|CAD@106|0-1|0|CHAFD","1503":"T","1003":"02016C02016D02016E02016F02017002017102017202017202017302017402017502017602017702017802017902017A","1522":"if(exts~=nil) then\nif(power==0) then\ntiming_off=exts[10]; \nif((timing_off~=nil)and(timing_off>0) and (timing_off<=480))then\nbytes[5]=bit32.bor(bytes[5],0x04);\nbytes[7]=bit32.bor(bytes[7],0x10);\nbytes[11]=math.floor(timing_off\/60);\nend\nend\nbytes[15]=0;\nfor i=1,14,1 do\nbytes[15]=bytes[15]+bit32.rshift(bit32.band(bytes[i],0xF0),4)+bit32.band(bytes[i],0x0F);\nend\nend","301":"560,570","1504":"T|S&0","306":"1","305":"472","1517":"106@5&0-3*1|5@106&0-1*0","1506":"1","1017":"050C00313200@050C01313201@0515012F3001@0515022F3000@051600343500@051601343501@052900363700@052901363701@053E001D1E00@053E011D1E01@056A001F2000@056A011F2001","888888":[{"fname":"","fkey":"Timer Off","fid":10},{"fname":"","fkey":"Aux Heat","fid":12},{"fname":"","fkey":"lr_wind_mode","fid":21},{"fname":"","fkey":"sleep","fid":22},{"fname":"","fkey":"Clean Air","fid":41},{"fname":"","fkey":"Health Dehumidity","fid":62},{"fname":"","fkey":"mute","fid":106}],"1012":"03202402032024010908106B1E1F012024020320240503202403","302":"560,1620"},"frequency":38000,"type":2,"source":"kk","brand":"4385","order":999,"device":3}]},"encoding":"UTF-8","language":"ZH_CN"}